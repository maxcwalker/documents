#ifndef OPENSBLIBLOCK00_KERNEL_H
#define OPENSBLIBLOCK00_KERNEL_H
 void opensbliblock00Kernel026(const ACC<double> &x1_B0, ACC<double> &rhoE_B0, ACC<double> &rhou0_B0, ACC<double>
&rhou1_B0)
{
   double T = 0.0;
   double Twalld = 0.0;
   double rho = 0.0;
   double rhou0 = 0.0;
   double rhou1 = 0.0;
   Twalld = Twall;



    rhou0 = ((x1_B0(0,0) < 0.000546454645464546) ? (
   0.858698693583218 + 1.39657329019463e+122*pow(x1_B0(0,0), 34) +
      3726485.05172807*x1_B0(0,0) + 1.33094339783081e+168*pow(x1_B0(0,0), 48) + 1.00045987175411e+96*pow(x1_B0(0,0), 26)
      + 5.91096077573414e+36*pow(x1_B0(0,0), 8) + 1.53528049555959e+154*pow(x1_B0(0,0), 44) +
      3.57559334080588e+92*pow(x1_B0(0,0), 25) + 5.58489958728709e+56*pow(x1_B0(0,0), 14) +
      1.99573334132696e+148*pow(x1_B0(0,0), 42) + 1.4727840573024e+76*pow(x1_B0(0,0), 20) +
      1.0503126569574e+53*pow(x1_B0(0,0), 13) + 4.57807324979604e+118*pow(x1_B0(0,0), 33) +
      5.20539623672006e+43*pow(x1_B0(0,0), 10) +
      9.47393985493029e+28*(x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)) +
      1.31196707425615e+99*pow(x1_B0(0,0), 27) + 4.16539652620451e+144*pow(x1_B0(0,0), 41) +
      2.26846547650172e+125*pow(x1_B0(0,0), 35) + 3.62973597370326e+151*pow(x1_B0(0,0), 43) +
      4.48987447463518e+57*pow(x1_B0(0,0), 15) + 101026314677.042*(x1_B0(0,0)*x1_B0(0,0)) +
      2.7352608539862e+69*pow(x1_B0(0,0), 18) + 1.42025285057736e+128*pow(x1_B0(0,0), 36) +
      1.28203608136771e+73*pow(x1_B0(0,0), 19) + 2.77869102983301e+20*(x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)) -
      3.98954764747764e+131*pow(x1_B0(0,0), 37) - 2.19806323613439e+100*pow(x1_B0(0,0), 28) -
      1.19191949313435e+109*pow(x1_B0(0,0), 30) - 4.52103367863723e+105*pow(x1_B0(0,0), 29) -
      2.39028758605609e+40*pow(x1_B0(0,0), 9) - 7.91326281645742e+82*pow(x1_B0(0,0), 22) -
      4.04137812327632e+114*pow(x1_B0(0,0), 32) - 2.98513506190655e+138*pow(x1_B0(0,0), 39) -
      1.59961177373359e+135*pow(x1_B0(0,0), 38) - 1.8835242031209e+63*pow(x1_B0(0,0), 16) -
      7.19960905137795e+15*(x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)) - 1.65505310471418e+112*pow(x1_B0(0,0), 31) -
      8.41905128003066e-150*pow(x1_B0(0,0), 50) - 9.85968895040876e+170*pow(x1_B0(0,0), 49) -
      1.30331973301378e+86*pow(x1_B0(0,0), 23) - 3.49489433804139e+88*pow(x1_B0(0,0), 24) -
      7.07995952709708e+163*pow(x1_B0(0,0), 47) - 2.89312345112914e+161*pow(x1_B0(0,0), 46) -
      6.41403307986648e+24*(x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)) - 9.220284483546e+32*pow(x1_B0(0,0),
      7) - 2.4115325410043e+66*pow(x1_B0(0,0), 17) - 1.64562776952111e+46*pow(x1_B0(0,0), 11) -
      2.44081367278191e+141*pow(x1_B0(0,0), 40) - 1.58723193651149e+50*pow(x1_B0(0,0), 12) -
      1.37463449781703e+79*pow(x1_B0(0,0), 21) - 1.04863709278208e+158*pow(x1_B0(0,0), 45)
)
: (
  
      6886.80089778235
));

    rhou1 = ((x1_B0(0,0) < 0.000546454645464546) ? (
   0.0862659950729564 + 9.20504506454416e+166*pow(x1_B0(0,0), 48) +
      3.95364242681887e+42*pow(x1_B0(0,0), 10) + 1.19671347876251e+153*pow(x1_B0(0,0), 44) +
      7.97833436068639e+27*(x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)) +
      2.67469323691896e+143*pow(x1_B0(0,0), 41) + 4.75838149222483e+35*pow(x1_B0(0,0), 8) +
      2.56125455344141e+150*pow(x1_B0(0,0), 43) + 1.37463322564474e+147*pow(x1_B0(0,0), 42) +
      1.13350549298172e+127*pow(x1_B0(0,0), 36) + 9.32842000582636e+71*pow(x1_B0(0,0), 19) +
      1.15581374543589e+75*pow(x1_B0(0,0), 20) + 2.4563480029792e+19*(x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)) +
      2.40719370842285e+91*pow(x1_B0(0,0), 25) + 4.23090851304197e+55*pow(x1_B0(0,0), 14) +
      7.16064160385195e+94*pow(x1_B0(0,0), 26) + 6.77721814455417e+51*pow(x1_B0(0,0), 13) +
      9847519552.95012*(x1_B0(0,0)*x1_B0(0,0)) + 3.03458168281558e+117*pow(x1_B0(0,0), 33) +
      1.13730942691884e+100*pow(x1_B0(0,0), 28) + 9.88273182924966e+97*pow(x1_B0(0,0), 27) +
      4.7769382610212e+57*pow(x1_B0(0,0), 15) + 1.6371842747665e+124*pow(x1_B0(0,0), 35) +
      1.73616192787955e+68*pow(x1_B0(0,0), 18) + 9.75864538026825e+120*pow(x1_B0(0,0), 34) -
      657060279221524.0*(x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)) - 9.55638892367494e+44*pow(x1_B0(0,0), 11) -
      7.12066381860709e+156*pow(x1_B0(0,0), 45) - 4.22531579023259e+113*pow(x1_B0(0,0), 32) -
      1.22096236012231e+49*pow(x1_B0(0,0), 12) - 1.10405875401201e+134*pow(x1_B0(0,0), 38) -
      1.36952533666199e+62*pow(x1_B0(0,0), 16) - 1.87759613947655e+39*pow(x1_B0(0,0), 9) - 58265.3516008026*x1_B0(0,0) -
      5.52948346826185e+23*(x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)) -
      3.68971364439748e+87*pow(x1_B0(0,0), 24) - 7.59181768696008e+31*pow(x1_B0(0,0), 7) -
      1.22356257834338e+111*pow(x1_B0(0,0), 31) - 3.05059257241305e+104*pow(x1_B0(0,0), 29) -
      6.75653065874639e+169*pow(x1_B0(0,0), 49) - 2.11797883532286e+137*pow(x1_B0(0,0), 39) -
      2.57102889301786e+130*pow(x1_B0(0,0), 37) - 9.76610367693938e+84*pow(x1_B0(0,0), 23) -
      2.01689106738873e+160*pow(x1_B0(0,0), 46) - 8.45216686499623e+107*pow(x1_B0(0,0), 30) -
      5.62120848797368e+81*pow(x1_B0(0,0), 22) - 5.51705872264717e+162*pow(x1_B0(0,0), 47) -
      8.1754198020578e+77*pow(x1_B0(0,0), 21) - 1.90031094743102e+65*pow(x1_B0(0,0), 17) -
      1.83428338862933e+140*pow(x1_B0(0,0), 40) - 5.88387830608144e-151*pow(x1_B0(0,0), 50)
)
: (
  
      348.579084391623
));

    T = ((x1_B0(0,0) < 0.000546454645464546) ? (
   1541.55953018323 + 3.93700337083935e+54*pow(x1_B0(0,0), 14) +
      1.83234496018396e+126*pow(x1_B0(0,0), 36) + 1.80441035923754e+100*pow(x1_B0(0,0), 28) +
      1.97626736723119e+103*pow(x1_B0(0,0), 29) + 3.65669621467388e+132*pow(x1_B0(0,0), 38) +
      8.66765114554566e+96*pow(x1_B0(0,0), 27) + 1.38463975102275e+93*pow(x1_B0(0,0), 26) +
      3.93334527754926e+70*pow(x1_B0(0,0), 19) +
      1.68687867977813e+27*(x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)) +
      1.60032593477545e+74*pow(x1_B0(0,0), 20) + 3.85636593065571e+158*pow(x1_B0(0,0), 46) +
      7.73978211259729e+34*pow(x1_B0(0,0), 8) + 5.95622846269919e+57*pow(x1_B0(0,0), 15) +
      3.76302153044984e+41*pow(x1_B0(0,0), 10) + 3.47887643295795e+129*pow(x1_B0(0,0), 37) +
      6.37399692978607e+18*(x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)) + 4.90323375783774e+122*pow(x1_B0(0,0), 35) +
      2.66950178027241e+44*pow(x1_B0(0,0), 11) + 1.57419658864866e+152*pow(x1_B0(0,0), 44) +
      2.96024742431461e+168*pow(x1_B0(0,0), 49) + 2.08200226092924e+77*pow(x1_B0(0,0), 21) +
      4.06439073681065e+155*pow(x1_B0(0,0), 45) + 9.19239054844244e-153*pow(x1_B0(0,0), 50) -
      188770091543097.0*(x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)) - 5.39981205630432e+79*pow(x1_B0(0,0), 22) -
      1.92427433802071e+113*pow(x1_B0(0,0), 32) - 1.61030593954856e+90*pow(x1_B0(0,0), 25) -
      1.42287528857958e+31*pow(x1_B0(0,0), 7) - 8.22860698218673e+50*pow(x1_B0(0,0), 13) -
      1.54594172184999e+139*pow(x1_B0(0,0), 40) - 7.88015191184755e+83*pow(x1_B0(0,0), 23) -
      2.53225908692748e+38*pow(x1_B0(0,0), 9) - 2.8083385801981e+165*pow(x1_B0(0,0), 48) -
      7.22658693350727e+161*pow(x1_B0(0,0), 47) - 1.27354910559729e+135*pow(x1_B0(0,0), 39) -
      1.48033487097098e+119*pow(x1_B0(0,0), 34) - 7.69015404030736e+109*pow(x1_B0(0,0), 31) -
      2.70281018743248e+64*pow(x1_B0(0,0), 17) - 5.07228683685271e+105*pow(x1_B0(0,0), 30) - 20172.9878919216*x1_B0(0,0)
      - 4.78269252620416e+147*pow(x1_B0(0,0), 43) - 3.77561261452667e+142*pow(x1_B0(0,0), 41) -
      1.69313809404105e+87*pow(x1_B0(0,0), 24) -
      1.30232664632772e+23*(x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)) -
      5.65501800427317e+60*pow(x1_B0(0,0), 16) - 2.79041943511342e+116*pow(x1_B0(0,0), 33) -
      1.35700866575301e+48*pow(x1_B0(0,0), 12) - 2.59907326906903e+67*pow(x1_B0(0,0), 18) -
      8400953442.73587*(x1_B0(0,0)*x1_B0(0,0)) - 4.98848537195279e+145*pow(x1_B0(0,0), 42)
)
: (
  
      297.000003052167
));
   T = 297.0;

   rho = 1202.74707431774;

   rhou0_B0(0,0) = rhou0;

   rhou1_B0(0,0) = rhou1;

   rhoE_B0(0,0) = (0.5*(rhou0*rhou0) + 0.5*(rhou1*rhou1))/rho + invgama*inv2Minf*inv_gamma_m1*T*rho;

}

 void opensbliblock00Kernel029(const ACC<double> &x0_B0, const ACC<double> &x1_B0, ACC<double> &D00_B0, ACC<double>
&D01_B0, ACC<double> &D10_B0, ACC<double> &D11_B0, ACC<double> &detJ_B0, ACC<double> &wk0_B0, ACC<double> &wk1_B0,
ACC<double> &wk2_B0, ACC<double> &wk3_B0, const int *idx)
{
   double d1_x0_dx = 0.0;
   double d1_x0_dy = 0.0;
   double d1_x1_dx = 0.0;
   double d1_x1_dy = 0.0;
    d1_x1_dx = invDelta0block0*((idx[0] == 0) ? (
   -3*x1_B0(2,0) + 4*x1_B0(1,0) - (25.0/12.0)*x1_B0(0,0) -
      (1.0/4.0)*x1_B0(4,0) + ((4.0/3.0))*x1_B0(3,0)
)
: ((idx[0] == 1) ? (
   -(5.0/6.0)*x1_B0(0,0) -
      (1.0/2.0)*x1_B0(2,0) - (1.0/4.0)*x1_B0(-1,0) + ((1.0/12.0))*x1_B0(3,0) + ((3.0/2.0))*x1_B0(1,0)
)
: ((idx[0] == -1
      + block0np0) ? (
   -4*x1_B0(-1,0) + 3*x1_B0(-2,0) - (4.0/3.0)*x1_B0(-3,0) + ((1.0/4.0))*x1_B0(-4,0) +
      ((25.0/12.0))*x1_B0(0,0)
)
: ((idx[0] == -2 + block0np0) ? (
   ((1.0/2.0))*x1_B0(-2,0) - (3.0/2.0)*x1_B0(-1,0) -
      (1.0/12.0)*x1_B0(-3,0) + ((1.0/4.0))*x1_B0(1,0) + ((5.0/6.0))*x1_B0(0,0)
)
: (
   -(2.0/3.0)*x1_B0(-1,0) -
      (1.0/12.0)*x1_B0(2,0) + ((1.0/12.0))*x1_B0(-2,0) + ((2.0/3.0))*x1_B0(1,0)
)))));

    d1_x0_dy = invDelta1block0*((idx[1] == 0) ? (
   -3*x0_B0(0,2) + 4*x0_B0(0,1) - (25.0/12.0)*x0_B0(0,0) -
      (1.0/4.0)*x0_B0(0,4) + ((4.0/3.0))*x0_B0(0,3)
)
: ((idx[1] == 1) ? (
   -(5.0/6.0)*x0_B0(0,0) -
      (1.0/2.0)*x0_B0(0,2) - (1.0/4.0)*x0_B0(0,-1) + ((1.0/12.0))*x0_B0(0,3) + ((3.0/2.0))*x0_B0(0,1)
)
: ((idx[1] == -1
      + block0np1) ? (
   -4*x0_B0(0,-1) + 3*x0_B0(0,-2) - (4.0/3.0)*x0_B0(0,-3) + ((1.0/4.0))*x0_B0(0,-4) +
      ((25.0/12.0))*x0_B0(0,0)
)
: ((idx[1] == -2 + block0np1) ? (
   ((1.0/2.0))*x0_B0(0,-2) - (3.0/2.0)*x0_B0(0,-1) -
      (1.0/12.0)*x0_B0(0,-3) + ((1.0/4.0))*x0_B0(0,1) + ((5.0/6.0))*x0_B0(0,0)
)
: (
   -(2.0/3.0)*x0_B0(0,-1) -
      (1.0/12.0)*x0_B0(0,2) + ((1.0/12.0))*x0_B0(0,-2) + ((2.0/3.0))*x0_B0(0,1)
)))));

    d1_x0_dx = invDelta0block0*((idx[0] == 0) ? (
   -3*x0_B0(2,0) + 4*x0_B0(1,0) - (25.0/12.0)*x0_B0(0,0) -
      (1.0/4.0)*x0_B0(4,0) + ((4.0/3.0))*x0_B0(3,0)
)
: ((idx[0] == 1) ? (
   -(5.0/6.0)*x0_B0(0,0) -
      (1.0/2.0)*x0_B0(2,0) - (1.0/4.0)*x0_B0(-1,0) + ((1.0/12.0))*x0_B0(3,0) + ((3.0/2.0))*x0_B0(1,0)
)
: ((idx[0] == -1
      + block0np0) ? (
   -4*x0_B0(-1,0) + 3*x0_B0(-2,0) - (4.0/3.0)*x0_B0(-3,0) + ((1.0/4.0))*x0_B0(-4,0) +
      ((25.0/12.0))*x0_B0(0,0)
)
: ((idx[0] == -2 + block0np0) ? (
   ((1.0/2.0))*x0_B0(-2,0) - (3.0/2.0)*x0_B0(-1,0) -
      (1.0/12.0)*x0_B0(-3,0) + ((1.0/4.0))*x0_B0(1,0) + ((5.0/6.0))*x0_B0(0,0)
)
: (
   -(2.0/3.0)*x0_B0(-1,0) -
      (1.0/12.0)*x0_B0(2,0) + ((1.0/12.0))*x0_B0(-2,0) + ((2.0/3.0))*x0_B0(1,0)
)))));

    d1_x1_dy = invDelta1block0*((idx[1] == 0) ? (
   -3*x1_B0(0,2) + 4*x1_B0(0,1) - (25.0/12.0)*x1_B0(0,0) -
      (1.0/4.0)*x1_B0(0,4) + ((4.0/3.0))*x1_B0(0,3)
)
: ((idx[1] == 1) ? (
   -(5.0/6.0)*x1_B0(0,0) -
      (1.0/2.0)*x1_B0(0,2) - (1.0/4.0)*x1_B0(0,-1) + ((1.0/12.0))*x1_B0(0,3) + ((3.0/2.0))*x1_B0(0,1)
)
: ((idx[1] == -1
      + block0np1) ? (
   -4*x1_B0(0,-1) + 3*x1_B0(0,-2) - (4.0/3.0)*x1_B0(0,-3) + ((1.0/4.0))*x1_B0(0,-4) +
      ((25.0/12.0))*x1_B0(0,0)
)
: ((idx[1] == -2 + block0np1) ? (
   ((1.0/2.0))*x1_B0(0,-2) - (3.0/2.0)*x1_B0(0,-1) -
      (1.0/12.0)*x1_B0(0,-3) + ((1.0/4.0))*x1_B0(0,1) + ((5.0/6.0))*x1_B0(0,0)
)
: (
   -(2.0/3.0)*x1_B0(0,-1) -
      (1.0/12.0)*x1_B0(0,2) + ((1.0/12.0))*x1_B0(0,-2) + ((2.0/3.0))*x1_B0(0,1)
)))));

   wk0_B0(0,0) = d1_x0_dx;

   wk1_B0(0,0) = d1_x0_dy;

   wk2_B0(0,0) = d1_x1_dx;

   wk3_B0(0,0) = d1_x1_dy;

   detJ_B0(0,0) = d1_x0_dx*d1_x1_dy - d1_x0_dy*d1_x1_dx;

   D00_B0(0,0) = d1_x1_dy/(d1_x0_dx*d1_x1_dy - d1_x0_dy*d1_x1_dx);

   D01_B0(0,0) = -d1_x0_dy/(d1_x0_dx*d1_x1_dy - d1_x0_dy*d1_x1_dx);

   D10_B0(0,0) = -d1_x1_dx/(d1_x0_dx*d1_x1_dy - d1_x0_dy*d1_x1_dx);

   D11_B0(0,0) = d1_x0_dx/(d1_x0_dx*d1_x1_dy - d1_x0_dy*d1_x1_dx);

}

 void opensbliblock00Kernel030(ACC<double> &D00_B0, ACC<double> &D01_B0, ACC<double> &D10_B0, ACC<double> &D11_B0,
ACC<double> &detJ_B0)
{
   D00_B0(-1,0) = D00_B0(1,0);

   D01_B0(-1,0) = D01_B0(1,0);

   D10_B0(-1,0) = D10_B0(1,0);

   D11_B0(-1,0) = D11_B0(1,0);

   detJ_B0(-1,0) = detJ_B0(1,0);

   D00_B0(-2,0) = D00_B0(2,0);

   D01_B0(-2,0) = D01_B0(2,0);

   D10_B0(-2,0) = D10_B0(2,0);

   D11_B0(-2,0) = D11_B0(2,0);

   detJ_B0(-2,0) = detJ_B0(2,0);

}

 void opensbliblock00Kernel031(ACC<double> &D00_B0, ACC<double> &D01_B0, ACC<double> &D10_B0, ACC<double> &D11_B0,
ACC<double> &detJ_B0)
{
   D00_B0(1,0) = D00_B0(-1,0);

   D01_B0(1,0) = D01_B0(-1,0);

   D10_B0(1,0) = D10_B0(-1,0);

   D11_B0(1,0) = D11_B0(-1,0);

   detJ_B0(1,0) = detJ_B0(-1,0);

   D00_B0(2,0) = D00_B0(-2,0);

   D01_B0(2,0) = D01_B0(-2,0);

   D10_B0(2,0) = D10_B0(-2,0);

   D11_B0(2,0) = D11_B0(-2,0);

   detJ_B0(2,0) = detJ_B0(-2,0);

}

 void opensbliblock00Kernel032(ACC<double> &D00_B0, ACC<double> &D01_B0, ACC<double> &D10_B0, ACC<double> &D11_B0,
ACC<double> &detJ_B0)
{
   D00_B0(0,-1) = D00_B0(0,1);

   D01_B0(0,-1) = D01_B0(0,1);

   D10_B0(0,-1) = D10_B0(0,1);

   D11_B0(0,-1) = D11_B0(0,1);

   detJ_B0(0,-1) = detJ_B0(0,1);

   D00_B0(0,-2) = D00_B0(0,2);

   D01_B0(0,-2) = D01_B0(0,2);

   D10_B0(0,-2) = D10_B0(0,2);

   D11_B0(0,-2) = D11_B0(0,2);

   detJ_B0(0,-2) = detJ_B0(0,2);

}

 void opensbliblock00Kernel033(ACC<double> &D00_B0, ACC<double> &D01_B0, ACC<double> &D10_B0, ACC<double> &D11_B0,
ACC<double> &detJ_B0)
{
   D00_B0(0,1) = D00_B0(0,-1);

   D01_B0(0,1) = D01_B0(0,-1);

   D10_B0(0,1) = D10_B0(0,-1);

   D11_B0(0,1) = D11_B0(0,-1);

   detJ_B0(0,1) = detJ_B0(0,-1);

   D00_B0(0,2) = D00_B0(0,-2);

   D01_B0(0,2) = D01_B0(0,-2);

   D10_B0(0,2) = D10_B0(0,-2);

   D11_B0(0,2) = D11_B0(0,-2);

   detJ_B0(0,2) = detJ_B0(0,-2);

}

 void opensbliblock00Kernel038(const ACC<double> &D00_B0, const ACC<double> &D01_B0, const ACC<double> &D10_B0, const
ACC<double> &D11_B0, ACC<double> &SD000_B0, ACC<double> &SD001_B0, ACC<double> &SD010_B0, ACC<double> &SD011_B0,
ACC<double> &SD100_B0, ACC<double> &SD101_B0, ACC<double> &SD110_B0, ACC<double> &SD111_B0, const int *idx)
{
   double d1_D00_dx = 0.0;
   double d1_D00_dy = 0.0;
   double d1_D01_dx = 0.0;
   double d1_D01_dy = 0.0;
   double d1_D10_dx = 0.0;
   double d1_D10_dy = 0.0;
   double d1_D11_dx = 0.0;
   double d1_D11_dy = 0.0;
    d1_D01_dx = invDelta0block0*((idx[0] == 0) ? (
   -3*D01_B0(2,0) + 4*D01_B0(1,0) - (25.0/12.0)*D01_B0(0,0) -
      (1.0/4.0)*D01_B0(4,0) + ((4.0/3.0))*D01_B0(3,0)
)
: ((idx[0] == 1) ? (
   -(5.0/6.0)*D01_B0(0,0) -
      (1.0/2.0)*D01_B0(2,0) - (1.0/4.0)*D01_B0(-1,0) + ((1.0/12.0))*D01_B0(3,0) + ((3.0/2.0))*D01_B0(1,0)
)
: ((idx[0]
      == -1 + block0np0) ? (
   -4*D01_B0(-1,0) + 3*D01_B0(-2,0) - (4.0/3.0)*D01_B0(-3,0) + ((1.0/4.0))*D01_B0(-4,0) +
      ((25.0/12.0))*D01_B0(0,0)
)
: ((idx[0] == -2 + block0np0) ? (
   ((1.0/2.0))*D01_B0(-2,0) - (3.0/2.0)*D01_B0(-1,0)
      - (1.0/12.0)*D01_B0(-3,0) + ((1.0/4.0))*D01_B0(1,0) + ((5.0/6.0))*D01_B0(0,0)
)
: (
   -(2.0/3.0)*D01_B0(-1,0) -
      (1.0/12.0)*D01_B0(2,0) + ((1.0/12.0))*D01_B0(-2,0) + ((2.0/3.0))*D01_B0(1,0)
)))));

    d1_D00_dx = invDelta0block0*((idx[0] == 0) ? (
   -3*D00_B0(2,0) + 4*D00_B0(1,0) - (25.0/12.0)*D00_B0(0,0) -
      (1.0/4.0)*D00_B0(4,0) + ((4.0/3.0))*D00_B0(3,0)
)
: ((idx[0] == 1) ? (
   -(5.0/6.0)*D00_B0(0,0) -
      (1.0/2.0)*D00_B0(2,0) - (1.0/4.0)*D00_B0(-1,0) + ((1.0/12.0))*D00_B0(3,0) + ((3.0/2.0))*D00_B0(1,0)
)
: ((idx[0]
      == -1 + block0np0) ? (
   -4*D00_B0(-1,0) + 3*D00_B0(-2,0) - (4.0/3.0)*D00_B0(-3,0) + ((1.0/4.0))*D00_B0(-4,0) +
      ((25.0/12.0))*D00_B0(0,0)
)
: ((idx[0] == -2 + block0np0) ? (
   ((1.0/2.0))*D00_B0(-2,0) - (3.0/2.0)*D00_B0(-1,0)
      - (1.0/12.0)*D00_B0(-3,0) + ((1.0/4.0))*D00_B0(1,0) + ((5.0/6.0))*D00_B0(0,0)
)
: (
   -(2.0/3.0)*D00_B0(-1,0) -
      (1.0/12.0)*D00_B0(2,0) + ((1.0/12.0))*D00_B0(-2,0) + ((2.0/3.0))*D00_B0(1,0)
)))));

    d1_D01_dy = invDelta1block0*((idx[1] == 0) ? (
   -3*D01_B0(0,2) + 4*D01_B0(0,1) - (25.0/12.0)*D01_B0(0,0) -
      (1.0/4.0)*D01_B0(0,4) + ((4.0/3.0))*D01_B0(0,3)
)
: ((idx[1] == 1) ? (
   -(5.0/6.0)*D01_B0(0,0) -
      (1.0/2.0)*D01_B0(0,2) - (1.0/4.0)*D01_B0(0,-1) + ((1.0/12.0))*D01_B0(0,3) + ((3.0/2.0))*D01_B0(0,1)
)
: ((idx[1]
      == -1 + block0np1) ? (
   -4*D01_B0(0,-1) + 3*D01_B0(0,-2) - (4.0/3.0)*D01_B0(0,-3) + ((1.0/4.0))*D01_B0(0,-4) +
      ((25.0/12.0))*D01_B0(0,0)
)
: ((idx[1] == -2 + block0np1) ? (
   ((1.0/2.0))*D01_B0(0,-2) - (3.0/2.0)*D01_B0(0,-1)
      - (1.0/12.0)*D01_B0(0,-3) + ((1.0/4.0))*D01_B0(0,1) + ((5.0/6.0))*D01_B0(0,0)
)
: (
   -(2.0/3.0)*D01_B0(0,-1) -
      (1.0/12.0)*D01_B0(0,2) + ((1.0/12.0))*D01_B0(0,-2) + ((2.0/3.0))*D01_B0(0,1)
)))));

    d1_D00_dy = invDelta1block0*((idx[1] == 0) ? (
   -3*D00_B0(0,2) + 4*D00_B0(0,1) - (25.0/12.0)*D00_B0(0,0) -
      (1.0/4.0)*D00_B0(0,4) + ((4.0/3.0))*D00_B0(0,3)
)
: ((idx[1] == 1) ? (
   -(5.0/6.0)*D00_B0(0,0) -
      (1.0/2.0)*D00_B0(0,2) - (1.0/4.0)*D00_B0(0,-1) + ((1.0/12.0))*D00_B0(0,3) + ((3.0/2.0))*D00_B0(0,1)
)
: ((idx[1]
      == -1 + block0np1) ? (
   -4*D00_B0(0,-1) + 3*D00_B0(0,-2) - (4.0/3.0)*D00_B0(0,-3) + ((1.0/4.0))*D00_B0(0,-4) +
      ((25.0/12.0))*D00_B0(0,0)
)
: ((idx[1] == -2 + block0np1) ? (
   ((1.0/2.0))*D00_B0(0,-2) - (3.0/2.0)*D00_B0(0,-1)
      - (1.0/12.0)*D00_B0(0,-3) + ((1.0/4.0))*D00_B0(0,1) + ((5.0/6.0))*D00_B0(0,0)
)
: (
   -(2.0/3.0)*D00_B0(0,-1) -
      (1.0/12.0)*D00_B0(0,2) + ((1.0/12.0))*D00_B0(0,-2) + ((2.0/3.0))*D00_B0(0,1)
)))));

    d1_D11_dx = invDelta0block0*((idx[0] == 0) ? (
   -3*D11_B0(2,0) + 4*D11_B0(1,0) - (25.0/12.0)*D11_B0(0,0) -
      (1.0/4.0)*D11_B0(4,0) + ((4.0/3.0))*D11_B0(3,0)
)
: ((idx[0] == 1) ? (
   -(5.0/6.0)*D11_B0(0,0) -
      (1.0/2.0)*D11_B0(2,0) - (1.0/4.0)*D11_B0(-1,0) + ((1.0/12.0))*D11_B0(3,0) + ((3.0/2.0))*D11_B0(1,0)
)
: ((idx[0]
      == -1 + block0np0) ? (
   -4*D11_B0(-1,0) + 3*D11_B0(-2,0) - (4.0/3.0)*D11_B0(-3,0) + ((1.0/4.0))*D11_B0(-4,0) +
      ((25.0/12.0))*D11_B0(0,0)
)
: ((idx[0] == -2 + block0np0) ? (
   ((1.0/2.0))*D11_B0(-2,0) - (3.0/2.0)*D11_B0(-1,0)
      - (1.0/12.0)*D11_B0(-3,0) + ((1.0/4.0))*D11_B0(1,0) + ((5.0/6.0))*D11_B0(0,0)
)
: (
   -(2.0/3.0)*D11_B0(-1,0) -
      (1.0/12.0)*D11_B0(2,0) + ((1.0/12.0))*D11_B0(-2,0) + ((2.0/3.0))*D11_B0(1,0)
)))));

    d1_D11_dy = invDelta1block0*((idx[1] == 0) ? (
   -3*D11_B0(0,2) + 4*D11_B0(0,1) - (25.0/12.0)*D11_B0(0,0) -
      (1.0/4.0)*D11_B0(0,4) + ((4.0/3.0))*D11_B0(0,3)
)
: ((idx[1] == 1) ? (
   -(5.0/6.0)*D11_B0(0,0) -
      (1.0/2.0)*D11_B0(0,2) - (1.0/4.0)*D11_B0(0,-1) + ((1.0/12.0))*D11_B0(0,3) + ((3.0/2.0))*D11_B0(0,1)
)
: ((idx[1]
      == -1 + block0np1) ? (
   -4*D11_B0(0,-1) + 3*D11_B0(0,-2) - (4.0/3.0)*D11_B0(0,-3) + ((1.0/4.0))*D11_B0(0,-4) +
      ((25.0/12.0))*D11_B0(0,0)
)
: ((idx[1] == -2 + block0np1) ? (
   ((1.0/2.0))*D11_B0(0,-2) - (3.0/2.0)*D11_B0(0,-1)
      - (1.0/12.0)*D11_B0(0,-3) + ((1.0/4.0))*D11_B0(0,1) + ((5.0/6.0))*D11_B0(0,0)
)
: (
   -(2.0/3.0)*D11_B0(0,-1) -
      (1.0/12.0)*D11_B0(0,2) + ((1.0/12.0))*D11_B0(0,-2) + ((2.0/3.0))*D11_B0(0,1)
)))));

    d1_D10_dx = invDelta0block0*((idx[0] == 0) ? (
   -3*D10_B0(2,0) + 4*D10_B0(1,0) - (25.0/12.0)*D10_B0(0,0) -
      (1.0/4.0)*D10_B0(4,0) + ((4.0/3.0))*D10_B0(3,0)
)
: ((idx[0] == 1) ? (
   -(5.0/6.0)*D10_B0(0,0) -
      (1.0/2.0)*D10_B0(2,0) - (1.0/4.0)*D10_B0(-1,0) + ((1.0/12.0))*D10_B0(3,0) + ((3.0/2.0))*D10_B0(1,0)
)
: ((idx[0]
      == -1 + block0np0) ? (
   -4*D10_B0(-1,0) + 3*D10_B0(-2,0) - (4.0/3.0)*D10_B0(-3,0) + ((1.0/4.0))*D10_B0(-4,0) +
      ((25.0/12.0))*D10_B0(0,0)
)
: ((idx[0] == -2 + block0np0) ? (
   ((1.0/2.0))*D10_B0(-2,0) - (3.0/2.0)*D10_B0(-1,0)
      - (1.0/12.0)*D10_B0(-3,0) + ((1.0/4.0))*D10_B0(1,0) + ((5.0/6.0))*D10_B0(0,0)
)
: (
   -(2.0/3.0)*D10_B0(-1,0) -
      (1.0/12.0)*D10_B0(2,0) + ((1.0/12.0))*D10_B0(-2,0) + ((2.0/3.0))*D10_B0(1,0)
)))));

    d1_D10_dy = invDelta1block0*((idx[1] == 0) ? (
   -3*D10_B0(0,2) + 4*D10_B0(0,1) - (25.0/12.0)*D10_B0(0,0) -
      (1.0/4.0)*D10_B0(0,4) + ((4.0/3.0))*D10_B0(0,3)
)
: ((idx[1] == 1) ? (
   -(5.0/6.0)*D10_B0(0,0) -
      (1.0/2.0)*D10_B0(0,2) - (1.0/4.0)*D10_B0(0,-1) + ((1.0/12.0))*D10_B0(0,3) + ((3.0/2.0))*D10_B0(0,1)
)
: ((idx[1]
      == -1 + block0np1) ? (
   -4*D10_B0(0,-1) + 3*D10_B0(0,-2) - (4.0/3.0)*D10_B0(0,-3) + ((1.0/4.0))*D10_B0(0,-4) +
      ((25.0/12.0))*D10_B0(0,0)
)
: ((idx[1] == -2 + block0np1) ? (
   ((1.0/2.0))*D10_B0(0,-2) - (3.0/2.0)*D10_B0(0,-1)
      - (1.0/12.0)*D10_B0(0,-3) + ((1.0/4.0))*D10_B0(0,1) + ((5.0/6.0))*D10_B0(0,0)
)
: (
   -(2.0/3.0)*D10_B0(0,-1) -
      (1.0/12.0)*D10_B0(0,2) + ((1.0/12.0))*D10_B0(0,-2) + ((2.0/3.0))*D10_B0(0,1)
)))));

   SD000_B0(0,0) = d1_D00_dx;

   SD001_B0(0,0) = d1_D00_dy;

   SD010_B0(0,0) = d1_D01_dx;

   SD011_B0(0,0) = d1_D01_dy;

   SD100_B0(0,0) = d1_D10_dx;

   SD101_B0(0,0) = d1_D10_dy;

   SD110_B0(0,0) = d1_D11_dx;

   SD111_B0(0,0) = d1_D11_dy;

}

void opensbliblock00Kernel022(ACC<double> &rhoE_B0, ACC<double> &rho_B0, ACC<double> &rhou0_B0, ACC<double> &rhou1_B0)
{
   double ab = 0.0;
   double pb = 0.0;
   double rhob = 0.0;
   double ub0 = 0.0;
   double ub1 = 0.0;
   rhob = rho_B0(0,0);

   ub0 = fabs(rhou0_B0(0,0)/rho_B0(0,0));

   ub1 = fabs(rhou1_B0(0,0)/rho_B0(0,0));

   pb = (-1 + gama)*(-0.5*((ub0*ub0) + (ub1*ub1))*rhob + rhoE_B0(0,0));

   ab = sqrt(gama*pb/rhob);

   rho_B0(0,0) = ((ub0 >= ab) ? (
   rho_B0(-1,0)
)
: (
   rho_B0(0,0)
));

   rhou0_B0(0,0) = ((ub0 >= ab) ? (
   rhou0_B0(-1,0)
)
: (
   rhou0_B0(0,0)
));

   rhou1_B0(0,0) = ((ub0 >= ab) ? (
   rhou1_B0(-1,0)
)
: (
   rhou1_B0(0,0)
));

   rhoE_B0(0,0) = ((ub0 >= ab) ? (
   rhoE_B0(-1,0)
)
: (
   rhoE_B0(0,0)
));

   rhoE_B0(-1,0) = ((ub0 >= ab) ? (
   rhoE_B0(-1,0)
)
: (
   rhoE_B0(0,0)
));

   rhoE_B0(-2,0) = ((ub0 >= ab) ? (
   rhoE_B0(-2,0)
)
: (
   rhoE_B0(0,0)
));

}

void opensbliblock00Kernel023(ACC<double> &rhoE_B0, ACC<double> &rho_B0, ACC<double> &rhou0_B0, ACC<double> &rhou1_B0)
{
   rho_B0(0,0) = rho_B0(-1,0);

   rhou0_B0(0,0) = rhou0_B0(-1,0);

   rhou1_B0(0,0) = rhou1_B0(-1,0);

   rhoE_B0(0,0) = rhoE_B0(-1,0);

   rho_B0(1,0) = rho_B0(-1,0);

   rhou0_B0(1,0) = rhou0_B0(-1,0);

   rhou1_B0(1,0) = rhou1_B0(-1,0);

   rhoE_B0(1,0) = rhoE_B0(-1,0);

   rho_B0(2,0) = rho_B0(-1,0);

   rhou0_B0(2,0) = rhou0_B0(-1,0);

   rhou1_B0(2,0) = rhou1_B0(-1,0);

   rhoE_B0(2,0) = rhoE_B0(-1,0);

}

void opensbliblock00Kernel024(ACC<double> &rhoE_B0, ACC<double> &rho_B0, ACC<double> &rhou0_B0, ACC<double> &rhou1_B0)
{
   double Pwall = 0.0;
   double T1 = 0.0;
   double T2 = 0.0;
   double T_above = 0.0;
   double rho_halo_1 = 0.0;
   double rho_halo_2 = 0.0;
   double u01 = 0.0;
   double u02 = 0.0;
   double u11 = 0.0;
   double u12 = 0.0;
   rhou0_B0(0,0) = 0.0;

   rhou1_B0(0,0) = 0.0;

   rhoE_B0(0,0) = Twall*inv2Minf*rho_B0(0,0)/(gama*(-1.0 + gama));

    Pwall = (-1 + gama)*(-(((1.0/2.0))*(rhou0_B0(0,0)*rhou0_B0(0,0)) +
      ((1.0/2.0))*(rhou1_B0(0,0)*rhou1_B0(0,0)))/rho_B0(0,0) + rhoE_B0(0,0));

   u01 = rhou0_B0(0,1)/rho_B0(0,1);

   u02 = rhou0_B0(0,2)/rho_B0(0,2);

   u11 = rhou1_B0(0,1)/rho_B0(0,1);

   u12 = rhou1_B0(0,2)/rho_B0(0,2);

    T_above = (Minf*Minf)*(-1 + gama)*(-(((1.0/2.0))*(rhou0_B0(0,1)*rhou0_B0(0,1)) +
      ((1.0/2.0))*(rhou1_B0(0,1)*rhou1_B0(0,1)))/rho_B0(0,1) + rhoE_B0(0,1))*gama/rho_B0(0,1);

   T1 = -T_above + 2*Twall;

   rho_halo_1 = (Minf*Minf)*gama*Pwall/T1;

   rho_B0(0,-1) = rho_halo_1;

   rhou0_B0(0,-1) = -rho_halo_1*u01;

   rhou1_B0(0,-1) = -rho_halo_1*u11;

   rhoE_B0(0,-1) = inv_gamma_m1*Pwall + ((1.0/2.0))*((u01*u01) + (u11*u11))*rho_halo_1;

   T2 = -2*T_above + 3*Twall;

   rho_halo_1 = (Minf*Minf)*gama*Pwall/T1;

   rho_B0(0,-1) = rho_halo_1;

   rho_halo_2 = (Minf*Minf)*gama*Pwall/T2;

   rho_B0(0,-2) = rho_halo_2;

   rhou0_B0(0,-1) = -rho_halo_1*u01;

   rhou1_B0(0,-1) = -rho_halo_1*u11;

   rhou0_B0(0,-2) = -rho_halo_2*u02;

   rhou1_B0(0,-2) = -rho_halo_2*u12;

   rhoE_B0(0,-1) = inv_gamma_m1*Pwall + ((1.0/2.0))*((u01*u01) + (u11*u11))*rho_halo_1;

   rhoE_B0(0,-2) = inv_gamma_m1*Pwall + ((1.0/2.0))*((u02*u02) + (u12*u12))*rho_halo_2;

}

 void opensbliblock00Kernel025(ACC<double> &rhoE_B0, ACC<double> &rho_B0, ACC<double> &rhou0_B0, ACC<double> &rhou1_B0,
const int *idx)
{
   double x0 = 0.0;
   x0 = Delta0block0*idx[0];

   rho_B0(0,0) = ((x0 > 500.0) ? (
   1.129734572
)
: (
   1.00000596004
));

   rhou0_B0(0,0) = ((x0 > 500.0) ? (
   1.0921171
)
: (
   1.00000268202
));

   rhou1_B0(0,0) = ((x0 > 500.0) ? (
   -0.058866065
)
: (
   0.00565001630205
));

   rhoE_B0(0,0) = ((x0 > 500.0) ? (
   1.0590824
)
: (
   0.94644428042
));

}

void opensbliblock00Kernel001(const ACC<double> &rho_B0, const ACC<double> &rhou0_B0, ACC<double> &u0_B0)
{
   u0_B0(0,0) = rhou0_B0(0,0)/rho_B0(0,0);

}

void opensbliblock00Kernel003(const ACC<double> &rho_B0, const ACC<double> &rhou1_B0, ACC<double> &u1_B0)
{
   u1_B0(0,0) = rhou1_B0(0,0)/rho_B0(0,0);

}

 void opensbliblock00Kernel012(const ACC<double> &rhoE_B0, const ACC<double> &rho_B0, const ACC<double> &u0_B0, const
ACC<double> &u1_B0, ACC<double> &p_B0)
{
    p_B0(0,0) = (-1 + gama)*(-(1.0/2.0)*(u0_B0(0,0)*u0_B0(0,0))*rho_B0(0,0) -
      (1.0/2.0)*(u1_B0(0,0)*u1_B0(0,0))*rho_B0(0,0) + rhoE_B0(0,0));

}

void opensbliblock00Kernel007(const ACC<double> &p_B0, const ACC<double> &rho_B0, ACC<double> &T_B0)
{
   T_B0(0,0) = (Minf*Minf)*gama*p_B0(0,0)/rho_B0(0,0);

}

void opensbliblock00Kernel016(const ACC<double> &T_B0, ACC<double> &mu_B0)
{
   mu_B0(0,0) = T_B0(0,0)*sqrt(T_B0(0,0))*(1.0 + SuthT*invRefT)/(SuthT*invRefT + T_B0(0,0));

}

void opensbliblock00Kernel000(const ACC<double> &u0_B0, ACC<double> &wk0_B0, const int *idx)
{
   if (idx[0] == 0){

       wk0_B0(0,0) = (-3*u0_B0(2,0) + 4*u0_B0(1,0) - (25.0/12.0)*u0_B0(0,0) - (1.0/4.0)*u0_B0(4,0) +
            ((4.0/3.0))*u0_B0(3,0))*invDelta0block0;

   }

   else if (idx[0] == 1){

       wk0_B0(0,0) = (-(5.0/6.0)*u0_B0(0,0) - (1.0/2.0)*u0_B0(2,0) - (1.0/4.0)*u0_B0(-1,0) + ((1.0/12.0))*u0_B0(3,0) +
            ((3.0/2.0))*u0_B0(1,0))*invDelta0block0;

   }

   else if (idx[0] == -1 + block0np0){

       wk0_B0(0,0) = (-4*u0_B0(-1,0) + 3*u0_B0(-2,0) - (4.0/3.0)*u0_B0(-3,0) + ((1.0/4.0))*u0_B0(-4,0) +
            ((25.0/12.0))*u0_B0(0,0))*invDelta0block0;

   }

   else if (idx[0] == -2 + block0np0){

       wk0_B0(0,0) = (((1.0/2.0))*u0_B0(-2,0) - (3.0/2.0)*u0_B0(-1,0) - (1.0/12.0)*u0_B0(-3,0) + ((1.0/4.0))*u0_B0(1,0)
            + ((5.0/6.0))*u0_B0(0,0))*invDelta0block0;

   }

   else{

       wk0_B0(0,0) = (-(2.0/3.0)*u0_B0(-1,0) - (1.0/12.0)*u0_B0(2,0) + ((1.0/12.0))*u0_B0(-2,0) +
            ((2.0/3.0))*u0_B0(1,0))*invDelta0block0;

   }

}

void opensbliblock00Kernel002(const ACC<double> &u1_B0, ACC<double> &wk1_B0, const int *idx)
{
   if (idx[0] == 0){

       wk1_B0(0,0) = (-3*u1_B0(2,0) + 4*u1_B0(1,0) - (25.0/12.0)*u1_B0(0,0) - (1.0/4.0)*u1_B0(4,0) +
            ((4.0/3.0))*u1_B0(3,0))*invDelta0block0;

   }

   else if (idx[0] == 1){

       wk1_B0(0,0) = (-(5.0/6.0)*u1_B0(0,0) - (1.0/2.0)*u1_B0(2,0) - (1.0/4.0)*u1_B0(-1,0) + ((1.0/12.0))*u1_B0(3,0) +
            ((3.0/2.0))*u1_B0(1,0))*invDelta0block0;

   }

   else if (idx[0] == -1 + block0np0){

       wk1_B0(0,0) = (-4*u1_B0(-1,0) + 3*u1_B0(-2,0) - (4.0/3.0)*u1_B0(-3,0) + ((1.0/4.0))*u1_B0(-4,0) +
            ((25.0/12.0))*u1_B0(0,0))*invDelta0block0;

   }

   else if (idx[0] == -2 + block0np0){

       wk1_B0(0,0) = (((1.0/2.0))*u1_B0(-2,0) - (3.0/2.0)*u1_B0(-1,0) - (1.0/12.0)*u1_B0(-3,0) + ((1.0/4.0))*u1_B0(1,0)
            + ((5.0/6.0))*u1_B0(0,0))*invDelta0block0;

   }

   else{

       wk1_B0(0,0) = (-(2.0/3.0)*u1_B0(-1,0) - (1.0/12.0)*u1_B0(2,0) + ((1.0/12.0))*u1_B0(-2,0) +
            ((2.0/3.0))*u1_B0(1,0))*invDelta0block0;

   }

}

void opensbliblock00Kernel004(const ACC<double> &u2_B0, ACC<double> &wk2_B0, const int *idx)
{
   if (idx[0] == 0){

       wk2_B0(0,0) = (-3*u2_B0(2,0) + 4*u2_B0(1,0) - (25.0/12.0)*u2_B0(0,0) - (1.0/4.0)*u2_B0(4,0) +
            ((4.0/3.0))*u2_B0(3,0))*invDelta0block0;

   }

   else if (idx[0] == 1){

       wk2_B0(0,0) = (-(5.0/6.0)*u2_B0(0,0) - (1.0/2.0)*u2_B0(2,0) - (1.0/4.0)*u2_B0(-1,0) + ((1.0/12.0))*u2_B0(3,0) +
            ((3.0/2.0))*u2_B0(1,0))*invDelta0block0;

   }

   else if (idx[0] == -1 + block0np0){

       wk2_B0(0,0) = (-4*u2_B0(-1,0) + 3*u2_B0(-2,0) - (4.0/3.0)*u2_B0(-3,0) + ((1.0/4.0))*u2_B0(-4,0) +
            ((25.0/12.0))*u2_B0(0,0))*invDelta0block0;

   }

   else if (idx[0] == -2 + block0np0){

       wk2_B0(0,0) = (((1.0/2.0))*u2_B0(-2,0) - (3.0/2.0)*u2_B0(-1,0) - (1.0/12.0)*u2_B0(-3,0) + ((1.0/4.0))*u2_B0(1,0)
            + ((5.0/6.0))*u2_B0(0,0))*invDelta0block0;

   }

   else{

       wk2_B0(0,0) = (-(2.0/3.0)*u2_B0(-1,0) - (1.0/12.0)*u2_B0(2,0) + ((1.0/12.0))*u2_B0(-2,0) +
            ((2.0/3.0))*u2_B0(1,0))*invDelta0block0;

   }

}

void opensbliblock00Kernel006(const ACC<double> &T_B0, ACC<double> &wk3_B0, const int *idx)
{
   if (idx[0] == 0){

       wk3_B0(0,0) = (-3*T_B0(2,0) + 4*T_B0(1,0) - (25.0/12.0)*T_B0(0,0) - (1.0/4.0)*T_B0(4,0) +
            ((4.0/3.0))*T_B0(3,0))*invDelta0block0;

   }

   else if (idx[0] == 1){

       wk3_B0(0,0) = (-(5.0/6.0)*T_B0(0,0) - (1.0/2.0)*T_B0(2,0) - (1.0/4.0)*T_B0(-1,0) + ((1.0/12.0))*T_B0(3,0) +
            ((3.0/2.0))*T_B0(1,0))*invDelta0block0;

   }

   else if (idx[0] == -1 + block0np0){

       wk3_B0(0,0) = (-4*T_B0(-1,0) + 3*T_B0(-2,0) - (4.0/3.0)*T_B0(-3,0) + ((1.0/4.0))*T_B0(-4,0) +
            ((25.0/12.0))*T_B0(0,0))*invDelta0block0;

   }

   else if (idx[0] == -2 + block0np0){

       wk3_B0(0,0) = (((1.0/2.0))*T_B0(-2,0) - (3.0/2.0)*T_B0(-1,0) - (1.0/12.0)*T_B0(-3,0) + ((1.0/4.0))*T_B0(1,0) +
            ((5.0/6.0))*T_B0(0,0))*invDelta0block0;

   }

   else{

       wk3_B0(0,0) = (-(2.0/3.0)*T_B0(-1,0) - (1.0/12.0)*T_B0(2,0) + ((1.0/12.0))*T_B0(-2,0) +
            ((2.0/3.0))*T_B0(1,0))*invDelta0block0;

   }

}

void opensbliblock00Kernel008(const ACC<double> &u0_B0, ACC<double> &wk4_B0, const int *idx)
{
   if (idx[1] == 0){

       wk4_B0(0,0) = (-3*u0_B0(0,2) + 4*u0_B0(0,1) - (25.0/12.0)*u0_B0(0,0) - (1.0/4.0)*u0_B0(0,4) +
            ((4.0/3.0))*u0_B0(0,3))*invDelta1block0;

   }

   else if (idx[1] == 1){

       wk4_B0(0,0) = (-(5.0/6.0)*u0_B0(0,0) - (1.0/2.0)*u0_B0(0,2) - (1.0/4.0)*u0_B0(0,-1) + ((1.0/12.0))*u0_B0(0,3) +
            ((3.0/2.0))*u0_B0(0,1))*invDelta1block0;

   }

   else if (idx[1] == -1 + block0np1){

       wk4_B0(0,0) = (-4*u0_B0(0,-1) + 3*u0_B0(0,-2) - (4.0/3.0)*u0_B0(0,-3) + ((1.0/4.0))*u0_B0(0,-4) +
            ((25.0/12.0))*u0_B0(0,0))*invDelta1block0;

   }

   else if (idx[1] == -2 + block0np1){

       wk4_B0(0,0) = (((1.0/2.0))*u0_B0(0,-2) - (3.0/2.0)*u0_B0(0,-1) - (1.0/12.0)*u0_B0(0,-3) + ((1.0/4.0))*u0_B0(0,1)
            + ((5.0/6.0))*u0_B0(0,0))*invDelta1block0;

   }

   else{

       wk4_B0(0,0) = (-(2.0/3.0)*u0_B0(0,-1) - (1.0/12.0)*u0_B0(0,2) + ((1.0/12.0))*u0_B0(0,-2) +
            ((2.0/3.0))*u0_B0(0,1))*invDelta1block0;

   }

}

void opensbliblock00Kernel009(const ACC<double> &u1_B0, ACC<double> &wk5_B0, const int *idx)
{
   if (idx[1] == 0){

       wk5_B0(0,0) = (-3*u1_B0(0,2) + 4*u1_B0(0,1) - (25.0/12.0)*u1_B0(0,0) - (1.0/4.0)*u1_B0(0,4) +
            ((4.0/3.0))*u1_B0(0,3))*invDelta1block0;

   }

   else if (idx[1] == 1){

       wk5_B0(0,0) = (-(5.0/6.0)*u1_B0(0,0) - (1.0/2.0)*u1_B0(0,2) - (1.0/4.0)*u1_B0(0,-1) + ((1.0/12.0))*u1_B0(0,3) +
            ((3.0/2.0))*u1_B0(0,1))*invDelta1block0;

   }

   else if (idx[1] == -1 + block0np1){

       wk5_B0(0,0) = (-4*u1_B0(0,-1) + 3*u1_B0(0,-2) - (4.0/3.0)*u1_B0(0,-3) + ((1.0/4.0))*u1_B0(0,-4) +
            ((25.0/12.0))*u1_B0(0,0))*invDelta1block0;

   }

   else if (idx[1] == -2 + block0np1){

       wk5_B0(0,0) = (((1.0/2.0))*u1_B0(0,-2) - (3.0/2.0)*u1_B0(0,-1) - (1.0/12.0)*u1_B0(0,-3) + ((1.0/4.0))*u1_B0(0,1)
            + ((5.0/6.0))*u1_B0(0,0))*invDelta1block0;

   }

   else{

       wk5_B0(0,0) = (-(2.0/3.0)*u1_B0(0,-1) - (1.0/12.0)*u1_B0(0,2) + ((1.0/12.0))*u1_B0(0,-2) +
            ((2.0/3.0))*u1_B0(0,1))*invDelta1block0;

   }

}

void opensbliblock00Kernel010(const ACC<double> &u2_B0, ACC<double> &wk6_B0, const int *idx)
{
   if (idx[1] == 0){

       wk6_B0(0,0) = (-3*u2_B0(0,2) + 4*u2_B0(0,1) - (25.0/12.0)*u2_B0(0,0) - (1.0/4.0)*u2_B0(0,4) +
            ((4.0/3.0))*u2_B0(0,3))*invDelta1block0;

   }

   else if (idx[1] == 1){

       wk6_B0(0,0) = (-(5.0/6.0)*u2_B0(0,0) - (1.0/2.0)*u2_B0(0,2) - (1.0/4.0)*u2_B0(0,-1) + ((1.0/12.0))*u2_B0(0,3) +
            ((3.0/2.0))*u2_B0(0,1))*invDelta1block0;

   }

   else if (idx[1] == -1 + block0np1){

       wk6_B0(0,0) = (-4*u2_B0(0,-1) + 3*u2_B0(0,-2) - (4.0/3.0)*u2_B0(0,-3) + ((1.0/4.0))*u2_B0(0,-4) +
            ((25.0/12.0))*u2_B0(0,0))*invDelta1block0;

   }

   else if (idx[1] == -2 + block0np1){

       wk6_B0(0,0) = (((1.0/2.0))*u2_B0(0,-2) - (3.0/2.0)*u2_B0(0,-1) - (1.0/12.0)*u2_B0(0,-3) + ((1.0/4.0))*u2_B0(0,1)
            + ((5.0/6.0))*u2_B0(0,0))*invDelta1block0;

   }

   else{

       wk6_B0(0,0) = (-(2.0/3.0)*u2_B0(0,-1) - (1.0/12.0)*u2_B0(0,2) + ((1.0/12.0))*u2_B0(0,-2) +
            ((2.0/3.0))*u2_B0(0,1))*invDelta1block0;

   }

}

void opensbliblock00Kernel011(const ACC<double> &T_B0, ACC<double> &wk7_B0, const int *idx)
{
   if (idx[1] == 0){

       wk7_B0(0,0) = (-3*T_B0(0,2) + 4*T_B0(0,1) - (25.0/12.0)*T_B0(0,0) - (1.0/4.0)*T_B0(0,4) +
            ((4.0/3.0))*T_B0(0,3))*invDelta1block0;

   }

   else if (idx[1] == 1){

       wk7_B0(0,0) = (-(5.0/6.0)*T_B0(0,0) - (1.0/2.0)*T_B0(0,2) - (1.0/4.0)*T_B0(0,-1) + ((1.0/12.0))*T_B0(0,3) +
            ((3.0/2.0))*T_B0(0,1))*invDelta1block0;

   }

   else if (idx[1] == -1 + block0np1){

       wk7_B0(0,0) = (-4*T_B0(0,-1) + 3*T_B0(0,-2) - (4.0/3.0)*T_B0(0,-3) + ((1.0/4.0))*T_B0(0,-4) +
            ((25.0/12.0))*T_B0(0,0))*invDelta1block0;

   }

   else if (idx[1] == -2 + block0np1){

       wk7_B0(0,0) = (((1.0/2.0))*T_B0(0,-2) - (3.0/2.0)*T_B0(0,-1) - (1.0/12.0)*T_B0(0,-3) + ((1.0/4.0))*T_B0(0,1) +
            ((5.0/6.0))*T_B0(0,0))*invDelta1block0;

   }

   else{

       wk7_B0(0,0) = (-(2.0/3.0)*T_B0(0,-1) - (1.0/12.0)*T_B0(0,2) + ((1.0/12.0))*T_B0(0,-2) +
            ((2.0/3.0))*T_B0(0,1))*invDelta1block0;

   }

}

 void opensbliblock00Kernel020(const ACC<double> &D00_B0, const ACC<double> &D01_B0, const ACC<double> &D10_B0, const
ACC<double> &D11_B0, const ACC<double> &p_B0, const ACC<double> &rhoE_B0, const ACC<double> &rhou0_B0, const ACC<double>
&rhou1_B0, const ACC<double> &u0_B0, const ACC<double> &u1_B0, ACC<double> &Residual0_B0, ACC<double> &Residual1_B0,
ACC<double> &Residual2_B0, ACC<double> &Residual3_B0, const int *idx)
{
   double d1_prhoEu0_dx = 0.0;
   double d1_prhoEu0_dy = 0.0;
   double d1_prhoEu1_dx = 0.0;
   double d1_prhoEu1_dy = 0.0;
   double d1_prhou0u0_dx = 0.0;
   double d1_prhou0u0_dy = 0.0;
   double d1_prhou1u1_dx = 0.0;
   double d1_prhou1u1_dy = 0.0;
   double d1_rhou0_dx = 0.0;
   double d1_rhou0_dy = 0.0;
   double d1_rhou0u1_dx = 0.0;
   double d1_rhou0u1_dy = 0.0;
   double d1_rhou1_dx = 0.0;
   double d1_rhou1_dy = 0.0;
   double d1_rhou1u0_dx = 0.0;
   double d1_rhou1u0_dy = 0.0;
   if (idx[0] == 0){

       d1_prhoEu0_dx = (-3*(p_B0(2,0) + rhoE_B0(2,0))*u0_B0(2,0) + 4*(p_B0(1,0) + rhoE_B0(1,0))*u0_B0(1,0) -
            (25.0/12.0)*(p_B0(0,0) + rhoE_B0(0,0))*u0_B0(0,0) - (1.0/4.0)*(p_B0(4,0) + rhoE_B0(4,0))*u0_B0(4,0) +
            ((4.0/3.0))*(p_B0(3,0) + rhoE_B0(3,0))*u0_B0(3,0))*invDelta0block0;

       d1_prhoEu1_dx = (-3*(p_B0(2,0) + rhoE_B0(2,0))*u1_B0(2,0) + 4*(p_B0(1,0) + rhoE_B0(1,0))*u1_B0(1,0) -
            (25.0/12.0)*(p_B0(0,0) + rhoE_B0(0,0))*u1_B0(0,0) - (1.0/4.0)*(p_B0(4,0) + rhoE_B0(4,0))*u1_B0(4,0) +
            ((4.0/3.0))*(p_B0(3,0) + rhoE_B0(3,0))*u1_B0(3,0))*invDelta0block0;

       d1_prhou0u0_dx = (-3*p_B0(2,0) + 4*p_B0(1,0) - (25.0/12.0)*p_B0(0,0) - (1.0/4.0)*p_B0(4,0) +
            ((4.0/3.0))*p_B0(3,0) - 3*u0_B0(2,0)*rhou0_B0(2,0) + 4*u0_B0(1,0)*rhou0_B0(1,0) -
            (25.0/12.0)*u0_B0(0,0)*rhou0_B0(0,0) - (1.0/4.0)*u0_B0(4,0)*rhou0_B0(4,0) +
            ((4.0/3.0))*u0_B0(3,0)*rhou0_B0(3,0))*invDelta0block0;

       d1_prhou1u1_dx = (-3*p_B0(2,0) + 4*p_B0(1,0) - (25.0/12.0)*p_B0(0,0) - (1.0/4.0)*p_B0(4,0) +
            ((4.0/3.0))*p_B0(3,0) - 3*u1_B0(2,0)*rhou1_B0(2,0) + 4*u1_B0(1,0)*rhou1_B0(1,0) -
            (25.0/12.0)*u1_B0(0,0)*rhou1_B0(0,0) - (1.0/4.0)*u1_B0(4,0)*rhou1_B0(4,0) +
            ((4.0/3.0))*u1_B0(3,0)*rhou1_B0(3,0))*invDelta0block0;

       d1_rhou0_dx = (-3*rhou0_B0(2,0) + 4*rhou0_B0(1,0) - (25.0/12.0)*rhou0_B0(0,0) - (1.0/4.0)*rhou0_B0(4,0) +
            ((4.0/3.0))*rhou0_B0(3,0))*invDelta0block0;

       d1_rhou0u1_dx = (-3*u1_B0(2,0)*rhou0_B0(2,0) + 4*u1_B0(1,0)*rhou0_B0(1,0) - (25.0/12.0)*u1_B0(0,0)*rhou0_B0(0,0)
            - (1.0/4.0)*u1_B0(4,0)*rhou0_B0(4,0) + ((4.0/3.0))*u1_B0(3,0)*rhou0_B0(3,0))*invDelta0block0;

       d1_rhou1_dx = (-3*rhou1_B0(2,0) + 4*rhou1_B0(1,0) - (25.0/12.0)*rhou1_B0(0,0) - (1.0/4.0)*rhou1_B0(4,0) +
            ((4.0/3.0))*rhou1_B0(3,0))*invDelta0block0;

       d1_rhou1u0_dx = (-3*u0_B0(2,0)*rhou1_B0(2,0) + 4*u0_B0(1,0)*rhou1_B0(1,0) - (25.0/12.0)*u0_B0(0,0)*rhou1_B0(0,0)
            - (1.0/4.0)*u0_B0(4,0)*rhou1_B0(4,0) + ((4.0/3.0))*u0_B0(3,0)*rhou1_B0(3,0))*invDelta0block0;

   }

   else if (idx[0] == 1){

       d1_prhoEu0_dx = (-(5.0/6.0)*(p_B0(0,0) + rhoE_B0(0,0))*u0_B0(0,0) - (1.0/2.0)*(p_B0(2,0) +
            rhoE_B0(2,0))*u0_B0(2,0) - (1.0/4.0)*(p_B0(-1,0) + rhoE_B0(-1,0))*u0_B0(-1,0) + ((1.0/12.0))*(p_B0(3,0) +
            rhoE_B0(3,0))*u0_B0(3,0) + ((3.0/2.0))*(p_B0(1,0) + rhoE_B0(1,0))*u0_B0(1,0))*invDelta0block0;

       d1_prhoEu1_dx = (-(5.0/6.0)*(p_B0(0,0) + rhoE_B0(0,0))*u1_B0(0,0) - (1.0/2.0)*(p_B0(2,0) +
            rhoE_B0(2,0))*u1_B0(2,0) - (1.0/4.0)*(p_B0(-1,0) + rhoE_B0(-1,0))*u1_B0(-1,0) + ((1.0/12.0))*(p_B0(3,0) +
            rhoE_B0(3,0))*u1_B0(3,0) + ((3.0/2.0))*(p_B0(1,0) + rhoE_B0(1,0))*u1_B0(1,0))*invDelta0block0;

       d1_prhou0u0_dx = (-(5.0/6.0)*p_B0(0,0) - (1.0/2.0)*p_B0(2,0) - (1.0/4.0)*p_B0(-1,0) + ((1.0/12.0))*p_B0(3,0) +
            ((3.0/2.0))*p_B0(1,0) - (5.0/6.0)*u0_B0(0,0)*rhou0_B0(0,0) - (1.0/2.0)*u0_B0(2,0)*rhou0_B0(2,0) -
            (1.0/4.0)*u0_B0(-1,0)*rhou0_B0(-1,0) + ((1.0/12.0))*u0_B0(3,0)*rhou0_B0(3,0) +
            ((3.0/2.0))*u0_B0(1,0)*rhou0_B0(1,0))*invDelta0block0;

       d1_prhou1u1_dx = (-(5.0/6.0)*p_B0(0,0) - (1.0/2.0)*p_B0(2,0) - (1.0/4.0)*p_B0(-1,0) + ((1.0/12.0))*p_B0(3,0) +
            ((3.0/2.0))*p_B0(1,0) - (5.0/6.0)*u1_B0(0,0)*rhou1_B0(0,0) - (1.0/2.0)*u1_B0(2,0)*rhou1_B0(2,0) -
            (1.0/4.0)*u1_B0(-1,0)*rhou1_B0(-1,0) + ((1.0/12.0))*u1_B0(3,0)*rhou1_B0(3,0) +
            ((3.0/2.0))*u1_B0(1,0)*rhou1_B0(1,0))*invDelta0block0;

       d1_rhou0_dx = (-(5.0/6.0)*rhou0_B0(0,0) - (1.0/2.0)*rhou0_B0(2,0) - (1.0/4.0)*rhou0_B0(-1,0) +
            ((1.0/12.0))*rhou0_B0(3,0) + ((3.0/2.0))*rhou0_B0(1,0))*invDelta0block0;

       d1_rhou0u1_dx = (-(5.0/6.0)*u1_B0(0,0)*rhou0_B0(0,0) - (1.0/2.0)*u1_B0(2,0)*rhou0_B0(2,0) -
            (1.0/4.0)*u1_B0(-1,0)*rhou0_B0(-1,0) + ((1.0/12.0))*u1_B0(3,0)*rhou0_B0(3,0) +
            ((3.0/2.0))*u1_B0(1,0)*rhou0_B0(1,0))*invDelta0block0;

       d1_rhou1_dx = (-(5.0/6.0)*rhou1_B0(0,0) - (1.0/2.0)*rhou1_B0(2,0) - (1.0/4.0)*rhou1_B0(-1,0) +
            ((1.0/12.0))*rhou1_B0(3,0) + ((3.0/2.0))*rhou1_B0(1,0))*invDelta0block0;

       d1_rhou1u0_dx = (-(5.0/6.0)*u0_B0(0,0)*rhou1_B0(0,0) - (1.0/2.0)*u0_B0(2,0)*rhou1_B0(2,0) -
            (1.0/4.0)*u0_B0(-1,0)*rhou1_B0(-1,0) + ((1.0/12.0))*u0_B0(3,0)*rhou1_B0(3,0) +
            ((3.0/2.0))*u0_B0(1,0)*rhou1_B0(1,0))*invDelta0block0;

   }

   else if (idx[0] == -1 + block0np0){

       d1_prhoEu0_dx = (-4*(p_B0(-1,0) + rhoE_B0(-1,0))*u0_B0(-1,0) + 3*(p_B0(-2,0) + rhoE_B0(-2,0))*u0_B0(-2,0) -
            (4.0/3.0)*(p_B0(-3,0) + rhoE_B0(-3,0))*u0_B0(-3,0) + ((1.0/4.0))*(p_B0(-4,0) + rhoE_B0(-4,0))*u0_B0(-4,0) +
            ((25.0/12.0))*(p_B0(0,0) + rhoE_B0(0,0))*u0_B0(0,0))*invDelta0block0;

       d1_prhoEu1_dx = (-4*(p_B0(-1,0) + rhoE_B0(-1,0))*u1_B0(-1,0) + 3*(p_B0(-2,0) + rhoE_B0(-2,0))*u1_B0(-2,0) -
            (4.0/3.0)*(p_B0(-3,0) + rhoE_B0(-3,0))*u1_B0(-3,0) + ((1.0/4.0))*(p_B0(-4,0) + rhoE_B0(-4,0))*u1_B0(-4,0) +
            ((25.0/12.0))*(p_B0(0,0) + rhoE_B0(0,0))*u1_B0(0,0))*invDelta0block0;

       d1_prhou0u0_dx = (-4*p_B0(-1,0) + 3*p_B0(-2,0) - (4.0/3.0)*p_B0(-3,0) + ((1.0/4.0))*p_B0(-4,0) +
            ((25.0/12.0))*p_B0(0,0) - 4*u0_B0(-1,0)*rhou0_B0(-1,0) + 3*u0_B0(-2,0)*rhou0_B0(-2,0) -
            (4.0/3.0)*u0_B0(-3,0)*rhou0_B0(-3,0) + ((1.0/4.0))*u0_B0(-4,0)*rhou0_B0(-4,0) +
            ((25.0/12.0))*u0_B0(0,0)*rhou0_B0(0,0))*invDelta0block0;

       d1_prhou1u1_dx = (-4*p_B0(-1,0) + 3*p_B0(-2,0) - (4.0/3.0)*p_B0(-3,0) + ((1.0/4.0))*p_B0(-4,0) +
            ((25.0/12.0))*p_B0(0,0) - 4*u1_B0(-1,0)*rhou1_B0(-1,0) + 3*u1_B0(-2,0)*rhou1_B0(-2,0) -
            (4.0/3.0)*u1_B0(-3,0)*rhou1_B0(-3,0) + ((1.0/4.0))*u1_B0(-4,0)*rhou1_B0(-4,0) +
            ((25.0/12.0))*u1_B0(0,0)*rhou1_B0(0,0))*invDelta0block0;

       d1_rhou0_dx = (-4*rhou0_B0(-1,0) + 3*rhou0_B0(-2,0) - (4.0/3.0)*rhou0_B0(-3,0) + ((1.0/4.0))*rhou0_B0(-4,0) +
            ((25.0/12.0))*rhou0_B0(0,0))*invDelta0block0;

       d1_rhou0u1_dx = (-4*u1_B0(-1,0)*rhou0_B0(-1,0) + 3*u1_B0(-2,0)*rhou0_B0(-2,0) -
            (4.0/3.0)*u1_B0(-3,0)*rhou0_B0(-3,0) + ((1.0/4.0))*u1_B0(-4,0)*rhou0_B0(-4,0) +
            ((25.0/12.0))*u1_B0(0,0)*rhou0_B0(0,0))*invDelta0block0;

       d1_rhou1_dx = (-4*rhou1_B0(-1,0) + 3*rhou1_B0(-2,0) - (4.0/3.0)*rhou1_B0(-3,0) + ((1.0/4.0))*rhou1_B0(-4,0) +
            ((25.0/12.0))*rhou1_B0(0,0))*invDelta0block0;

       d1_rhou1u0_dx = (-4*u0_B0(-1,0)*rhou1_B0(-1,0) + 3*u0_B0(-2,0)*rhou1_B0(-2,0) -
            (4.0/3.0)*u0_B0(-3,0)*rhou1_B0(-3,0) + ((1.0/4.0))*u0_B0(-4,0)*rhou1_B0(-4,0) +
            ((25.0/12.0))*u0_B0(0,0)*rhou1_B0(0,0))*invDelta0block0;

   }

   else if (idx[0] == -2 + block0np0){

       d1_prhoEu0_dx = (((1.0/2.0))*(p_B0(-2,0) + rhoE_B0(-2,0))*u0_B0(-2,0) - (3.0/2.0)*(p_B0(-1,0) +
            rhoE_B0(-1,0))*u0_B0(-1,0) - (1.0/12.0)*(p_B0(-3,0) + rhoE_B0(-3,0))*u0_B0(-3,0) + ((1.0/4.0))*(p_B0(1,0) +
            rhoE_B0(1,0))*u0_B0(1,0) + ((5.0/6.0))*(p_B0(0,0) + rhoE_B0(0,0))*u0_B0(0,0))*invDelta0block0;

       d1_prhoEu1_dx = (((1.0/2.0))*(p_B0(-2,0) + rhoE_B0(-2,0))*u1_B0(-2,0) - (3.0/2.0)*(p_B0(-1,0) +
            rhoE_B0(-1,0))*u1_B0(-1,0) - (1.0/12.0)*(p_B0(-3,0) + rhoE_B0(-3,0))*u1_B0(-3,0) + ((1.0/4.0))*(p_B0(1,0) +
            rhoE_B0(1,0))*u1_B0(1,0) + ((5.0/6.0))*(p_B0(0,0) + rhoE_B0(0,0))*u1_B0(0,0))*invDelta0block0;

       d1_prhou0u0_dx = (((1.0/2.0))*p_B0(-2,0) - (3.0/2.0)*p_B0(-1,0) - (1.0/12.0)*p_B0(-3,0) + ((1.0/4.0))*p_B0(1,0) +
            ((5.0/6.0))*p_B0(0,0) + ((1.0/2.0))*u0_B0(-2,0)*rhou0_B0(-2,0) - (3.0/2.0)*u0_B0(-1,0)*rhou0_B0(-1,0) -
            (1.0/12.0)*u0_B0(-3,0)*rhou0_B0(-3,0) + ((1.0/4.0))*u0_B0(1,0)*rhou0_B0(1,0) +
            ((5.0/6.0))*u0_B0(0,0)*rhou0_B0(0,0))*invDelta0block0;

       d1_prhou1u1_dx = (((1.0/2.0))*p_B0(-2,0) - (3.0/2.0)*p_B0(-1,0) - (1.0/12.0)*p_B0(-3,0) + ((1.0/4.0))*p_B0(1,0) +
            ((5.0/6.0))*p_B0(0,0) + ((1.0/2.0))*u1_B0(-2,0)*rhou1_B0(-2,0) - (3.0/2.0)*u1_B0(-1,0)*rhou1_B0(-1,0) -
            (1.0/12.0)*u1_B0(-3,0)*rhou1_B0(-3,0) + ((1.0/4.0))*u1_B0(1,0)*rhou1_B0(1,0) +
            ((5.0/6.0))*u1_B0(0,0)*rhou1_B0(0,0))*invDelta0block0;

       d1_rhou0_dx = (((1.0/2.0))*rhou0_B0(-2,0) - (3.0/2.0)*rhou0_B0(-1,0) - (1.0/12.0)*rhou0_B0(-3,0) +
            ((1.0/4.0))*rhou0_B0(1,0) + ((5.0/6.0))*rhou0_B0(0,0))*invDelta0block0;

       d1_rhou0u1_dx = (((1.0/2.0))*u1_B0(-2,0)*rhou0_B0(-2,0) - (3.0/2.0)*u1_B0(-1,0)*rhou0_B0(-1,0) -
            (1.0/12.0)*u1_B0(-3,0)*rhou0_B0(-3,0) + ((1.0/4.0))*u1_B0(1,0)*rhou0_B0(1,0) +
            ((5.0/6.0))*u1_B0(0,0)*rhou0_B0(0,0))*invDelta0block0;

       d1_rhou1_dx = (((1.0/2.0))*rhou1_B0(-2,0) - (3.0/2.0)*rhou1_B0(-1,0) - (1.0/12.0)*rhou1_B0(-3,0) +
            ((1.0/4.0))*rhou1_B0(1,0) + ((5.0/6.0))*rhou1_B0(0,0))*invDelta0block0;

       d1_rhou1u0_dx = (((1.0/2.0))*u0_B0(-2,0)*rhou1_B0(-2,0) - (3.0/2.0)*u0_B0(-1,0)*rhou1_B0(-1,0) -
            (1.0/12.0)*u0_B0(-3,0)*rhou1_B0(-3,0) + ((1.0/4.0))*u0_B0(1,0)*rhou1_B0(1,0) +
            ((5.0/6.0))*u0_B0(0,0)*rhou1_B0(0,0))*invDelta0block0;

   }

   else{

       d1_prhoEu0_dx = (-(2.0/3.0)*(p_B0(-1,0) + rhoE_B0(-1,0))*u0_B0(-1,0) - (1.0/12.0)*(p_B0(2,0) +
            rhoE_B0(2,0))*u0_B0(2,0) + ((1.0/12.0))*(p_B0(-2,0) + rhoE_B0(-2,0))*u0_B0(-2,0) + ((2.0/3.0))*(p_B0(1,0) +
            rhoE_B0(1,0))*u0_B0(1,0))*invDelta0block0;

       d1_prhoEu1_dx = (-(2.0/3.0)*(p_B0(-1,0) + rhoE_B0(-1,0))*u1_B0(-1,0) - (1.0/12.0)*(p_B0(2,0) +
            rhoE_B0(2,0))*u1_B0(2,0) + ((1.0/12.0))*(p_B0(-2,0) + rhoE_B0(-2,0))*u1_B0(-2,0) + ((2.0/3.0))*(p_B0(1,0) +
            rhoE_B0(1,0))*u1_B0(1,0))*invDelta0block0;

       d1_prhou0u0_dx = (-(2.0/3.0)*p_B0(-1,0) - (1.0/12.0)*p_B0(2,0) + ((1.0/12.0))*p_B0(-2,0) + ((2.0/3.0))*p_B0(1,0)
            - (2.0/3.0)*u0_B0(-1,0)*rhou0_B0(-1,0) - (1.0/12.0)*u0_B0(2,0)*rhou0_B0(2,0) +
            ((1.0/12.0))*u0_B0(-2,0)*rhou0_B0(-2,0) + ((2.0/3.0))*u0_B0(1,0)*rhou0_B0(1,0))*invDelta0block0;

       d1_prhou1u1_dx = (-(2.0/3.0)*p_B0(-1,0) - (1.0/12.0)*p_B0(2,0) + ((1.0/12.0))*p_B0(-2,0) + ((2.0/3.0))*p_B0(1,0)
            - (2.0/3.0)*u1_B0(-1,0)*rhou1_B0(-1,0) - (1.0/12.0)*u1_B0(2,0)*rhou1_B0(2,0) +
            ((1.0/12.0))*u1_B0(-2,0)*rhou1_B0(-2,0) + ((2.0/3.0))*u1_B0(1,0)*rhou1_B0(1,0))*invDelta0block0;

       d1_rhou0_dx = (-(2.0/3.0)*rhou0_B0(-1,0) - (1.0/12.0)*rhou0_B0(2,0) + ((1.0/12.0))*rhou0_B0(-2,0) +
            ((2.0/3.0))*rhou0_B0(1,0))*invDelta0block0;

       d1_rhou0u1_dx = (-(2.0/3.0)*u1_B0(-1,0)*rhou0_B0(-1,0) - (1.0/12.0)*u1_B0(2,0)*rhou0_B0(2,0) +
            ((1.0/12.0))*u1_B0(-2,0)*rhou0_B0(-2,0) + ((2.0/3.0))*u1_B0(1,0)*rhou0_B0(1,0))*invDelta0block0;

       d1_rhou1_dx = (-(2.0/3.0)*rhou1_B0(-1,0) - (1.0/12.0)*rhou1_B0(2,0) + ((1.0/12.0))*rhou1_B0(-2,0) +
            ((2.0/3.0))*rhou1_B0(1,0))*invDelta0block0;

       d1_rhou1u0_dx = (-(2.0/3.0)*u0_B0(-1,0)*rhou1_B0(-1,0) - (1.0/12.0)*u0_B0(2,0)*rhou1_B0(2,0) +
            ((1.0/12.0))*u0_B0(-2,0)*rhou1_B0(-2,0) + ((2.0/3.0))*u0_B0(1,0)*rhou1_B0(1,0))*invDelta0block0;

   }

   if (idx[1] == 0){

       d1_prhoEu0_dy = (-3*(p_B0(0,2) + rhoE_B0(0,2))*u0_B0(0,2) + 4*(p_B0(0,1) + rhoE_B0(0,1))*u0_B0(0,1) -
            (25.0/12.0)*(p_B0(0,0) + rhoE_B0(0,0))*u0_B0(0,0) - (1.0/4.0)*(p_B0(0,4) + rhoE_B0(0,4))*u0_B0(0,4) +
            ((4.0/3.0))*(p_B0(0,3) + rhoE_B0(0,3))*u0_B0(0,3))*invDelta1block0;

       d1_prhoEu1_dy = (-3*(p_B0(0,2) + rhoE_B0(0,2))*u1_B0(0,2) + 4*(p_B0(0,1) + rhoE_B0(0,1))*u1_B0(0,1) -
            (25.0/12.0)*(p_B0(0,0) + rhoE_B0(0,0))*u1_B0(0,0) - (1.0/4.0)*(p_B0(0,4) + rhoE_B0(0,4))*u1_B0(0,4) +
            ((4.0/3.0))*(p_B0(0,3) + rhoE_B0(0,3))*u1_B0(0,3))*invDelta1block0;

       d1_prhou0u0_dy = (-3*p_B0(0,2) + 4*p_B0(0,1) - (25.0/12.0)*p_B0(0,0) - (1.0/4.0)*p_B0(0,4) +
            ((4.0/3.0))*p_B0(0,3) - 3*u0_B0(0,2)*rhou0_B0(0,2) + 4*u0_B0(0,1)*rhou0_B0(0,1) -
            (25.0/12.0)*u0_B0(0,0)*rhou0_B0(0,0) - (1.0/4.0)*u0_B0(0,4)*rhou0_B0(0,4) +
            ((4.0/3.0))*u0_B0(0,3)*rhou0_B0(0,3))*invDelta1block0;

       d1_prhou1u1_dy = (-3*p_B0(0,2) + 4*p_B0(0,1) - (25.0/12.0)*p_B0(0,0) - (1.0/4.0)*p_B0(0,4) +
            ((4.0/3.0))*p_B0(0,3) - 3*u1_B0(0,2)*rhou1_B0(0,2) + 4*u1_B0(0,1)*rhou1_B0(0,1) -
            (25.0/12.0)*u1_B0(0,0)*rhou1_B0(0,0) - (1.0/4.0)*u1_B0(0,4)*rhou1_B0(0,4) +
            ((4.0/3.0))*u1_B0(0,3)*rhou1_B0(0,3))*invDelta1block0;

       d1_rhou0_dy = (-3*rhou0_B0(0,2) + 4*rhou0_B0(0,1) - (25.0/12.0)*rhou0_B0(0,0) - (1.0/4.0)*rhou0_B0(0,4) +
            ((4.0/3.0))*rhou0_B0(0,3))*invDelta1block0;

       d1_rhou0u1_dy = (-3*u1_B0(0,2)*rhou0_B0(0,2) + 4*u1_B0(0,1)*rhou0_B0(0,1) - (25.0/12.0)*u1_B0(0,0)*rhou0_B0(0,0)
            - (1.0/4.0)*u1_B0(0,4)*rhou0_B0(0,4) + ((4.0/3.0))*u1_B0(0,3)*rhou0_B0(0,3))*invDelta1block0;

       d1_rhou1_dy = (-3*rhou1_B0(0,2) + 4*rhou1_B0(0,1) - (25.0/12.0)*rhou1_B0(0,0) - (1.0/4.0)*rhou1_B0(0,4) +
            ((4.0/3.0))*rhou1_B0(0,3))*invDelta1block0;

       d1_rhou1u0_dy = (-3*u0_B0(0,2)*rhou1_B0(0,2) + 4*u0_B0(0,1)*rhou1_B0(0,1) - (25.0/12.0)*u0_B0(0,0)*rhou1_B0(0,0)
            - (1.0/4.0)*u0_B0(0,4)*rhou1_B0(0,4) + ((4.0/3.0))*u0_B0(0,3)*rhou1_B0(0,3))*invDelta1block0;

   }

   else if (idx[1] == 1){

       d1_prhoEu0_dy = (-(5.0/6.0)*(p_B0(0,0) + rhoE_B0(0,0))*u0_B0(0,0) - (1.0/2.0)*(p_B0(0,2) +
            rhoE_B0(0,2))*u0_B0(0,2) - (1.0/4.0)*(p_B0(0,-1) + rhoE_B0(0,-1))*u0_B0(0,-1) + ((1.0/12.0))*(p_B0(0,3) +
            rhoE_B0(0,3))*u0_B0(0,3) + ((3.0/2.0))*(p_B0(0,1) + rhoE_B0(0,1))*u0_B0(0,1))*invDelta1block0;

       d1_prhoEu1_dy = (-(5.0/6.0)*(p_B0(0,0) + rhoE_B0(0,0))*u1_B0(0,0) - (1.0/2.0)*(p_B0(0,2) +
            rhoE_B0(0,2))*u1_B0(0,2) - (1.0/4.0)*(p_B0(0,-1) + rhoE_B0(0,-1))*u1_B0(0,-1) + ((1.0/12.0))*(p_B0(0,3) +
            rhoE_B0(0,3))*u1_B0(0,3) + ((3.0/2.0))*(p_B0(0,1) + rhoE_B0(0,1))*u1_B0(0,1))*invDelta1block0;

       d1_prhou0u0_dy = (-(5.0/6.0)*p_B0(0,0) - (1.0/2.0)*p_B0(0,2) - (1.0/4.0)*p_B0(0,-1) + ((1.0/12.0))*p_B0(0,3) +
            ((3.0/2.0))*p_B0(0,1) - (5.0/6.0)*u0_B0(0,0)*rhou0_B0(0,0) - (1.0/2.0)*u0_B0(0,2)*rhou0_B0(0,2) -
            (1.0/4.0)*u0_B0(0,-1)*rhou0_B0(0,-1) + ((1.0/12.0))*u0_B0(0,3)*rhou0_B0(0,3) +
            ((3.0/2.0))*u0_B0(0,1)*rhou0_B0(0,1))*invDelta1block0;

       d1_prhou1u1_dy = (-(5.0/6.0)*p_B0(0,0) - (1.0/2.0)*p_B0(0,2) - (1.0/4.0)*p_B0(0,-1) + ((1.0/12.0))*p_B0(0,3) +
            ((3.0/2.0))*p_B0(0,1) - (5.0/6.0)*u1_B0(0,0)*rhou1_B0(0,0) - (1.0/2.0)*u1_B0(0,2)*rhou1_B0(0,2) -
            (1.0/4.0)*u1_B0(0,-1)*rhou1_B0(0,-1) + ((1.0/12.0))*u1_B0(0,3)*rhou1_B0(0,3) +
            ((3.0/2.0))*u1_B0(0,1)*rhou1_B0(0,1))*invDelta1block0;

       d1_rhou0_dy = (-(5.0/6.0)*rhou0_B0(0,0) - (1.0/2.0)*rhou0_B0(0,2) - (1.0/4.0)*rhou0_B0(0,-1) +
            ((1.0/12.0))*rhou0_B0(0,3) + ((3.0/2.0))*rhou0_B0(0,1))*invDelta1block0;

       d1_rhou0u1_dy = (-(5.0/6.0)*u1_B0(0,0)*rhou0_B0(0,0) - (1.0/2.0)*u1_B0(0,2)*rhou0_B0(0,2) -
            (1.0/4.0)*u1_B0(0,-1)*rhou0_B0(0,-1) + ((1.0/12.0))*u1_B0(0,3)*rhou0_B0(0,3) +
            ((3.0/2.0))*u1_B0(0,1)*rhou0_B0(0,1))*invDelta1block0;

       d1_rhou1_dy = (-(5.0/6.0)*rhou1_B0(0,0) - (1.0/2.0)*rhou1_B0(0,2) - (1.0/4.0)*rhou1_B0(0,-1) +
            ((1.0/12.0))*rhou1_B0(0,3) + ((3.0/2.0))*rhou1_B0(0,1))*invDelta1block0;

       d1_rhou1u0_dy = (-(5.0/6.0)*u0_B0(0,0)*rhou1_B0(0,0) - (1.0/2.0)*u0_B0(0,2)*rhou1_B0(0,2) -
            (1.0/4.0)*u0_B0(0,-1)*rhou1_B0(0,-1) + ((1.0/12.0))*u0_B0(0,3)*rhou1_B0(0,3) +
            ((3.0/2.0))*u0_B0(0,1)*rhou1_B0(0,1))*invDelta1block0;

   }

   else if (idx[1] == -1 + block0np1){

       d1_prhoEu0_dy = (-4*(p_B0(0,-1) + rhoE_B0(0,-1))*u0_B0(0,-1) + 3*(p_B0(0,-2) + rhoE_B0(0,-2))*u0_B0(0,-2) -
            (4.0/3.0)*(p_B0(0,-3) + rhoE_B0(0,-3))*u0_B0(0,-3) + ((1.0/4.0))*(p_B0(0,-4) + rhoE_B0(0,-4))*u0_B0(0,-4) +
            ((25.0/12.0))*(p_B0(0,0) + rhoE_B0(0,0))*u0_B0(0,0))*invDelta1block0;

       d1_prhoEu1_dy = (-4*(p_B0(0,-1) + rhoE_B0(0,-1))*u1_B0(0,-1) + 3*(p_B0(0,-2) + rhoE_B0(0,-2))*u1_B0(0,-2) -
            (4.0/3.0)*(p_B0(0,-3) + rhoE_B0(0,-3))*u1_B0(0,-3) + ((1.0/4.0))*(p_B0(0,-4) + rhoE_B0(0,-4))*u1_B0(0,-4) +
            ((25.0/12.0))*(p_B0(0,0) + rhoE_B0(0,0))*u1_B0(0,0))*invDelta1block0;

       d1_prhou0u0_dy = (-4*p_B0(0,-1) + 3*p_B0(0,-2) - (4.0/3.0)*p_B0(0,-3) + ((1.0/4.0))*p_B0(0,-4) +
            ((25.0/12.0))*p_B0(0,0) - 4*u0_B0(0,-1)*rhou0_B0(0,-1) + 3*u0_B0(0,-2)*rhou0_B0(0,-2) -
            (4.0/3.0)*u0_B0(0,-3)*rhou0_B0(0,-3) + ((1.0/4.0))*u0_B0(0,-4)*rhou0_B0(0,-4) +
            ((25.0/12.0))*u0_B0(0,0)*rhou0_B0(0,0))*invDelta1block0;

       d1_prhou1u1_dy = (-4*p_B0(0,-1) + 3*p_B0(0,-2) - (4.0/3.0)*p_B0(0,-3) + ((1.0/4.0))*p_B0(0,-4) +
            ((25.0/12.0))*p_B0(0,0) - 4*u1_B0(0,-1)*rhou1_B0(0,-1) + 3*u1_B0(0,-2)*rhou1_B0(0,-2) -
            (4.0/3.0)*u1_B0(0,-3)*rhou1_B0(0,-3) + ((1.0/4.0))*u1_B0(0,-4)*rhou1_B0(0,-4) +
            ((25.0/12.0))*u1_B0(0,0)*rhou1_B0(0,0))*invDelta1block0;

       d1_rhou0_dy = (-4*rhou0_B0(0,-1) + 3*rhou0_B0(0,-2) - (4.0/3.0)*rhou0_B0(0,-3) + ((1.0/4.0))*rhou0_B0(0,-4) +
            ((25.0/12.0))*rhou0_B0(0,0))*invDelta1block0;

       d1_rhou0u1_dy = (-4*u1_B0(0,-1)*rhou0_B0(0,-1) + 3*u1_B0(0,-2)*rhou0_B0(0,-2) -
            (4.0/3.0)*u1_B0(0,-3)*rhou0_B0(0,-3) + ((1.0/4.0))*u1_B0(0,-4)*rhou0_B0(0,-4) +
            ((25.0/12.0))*u1_B0(0,0)*rhou0_B0(0,0))*invDelta1block0;

       d1_rhou1_dy = (-4*rhou1_B0(0,-1) + 3*rhou1_B0(0,-2) - (4.0/3.0)*rhou1_B0(0,-3) + ((1.0/4.0))*rhou1_B0(0,-4) +
            ((25.0/12.0))*rhou1_B0(0,0))*invDelta1block0;

       d1_rhou1u0_dy = (-4*u0_B0(0,-1)*rhou1_B0(0,-1) + 3*u0_B0(0,-2)*rhou1_B0(0,-2) -
            (4.0/3.0)*u0_B0(0,-3)*rhou1_B0(0,-3) + ((1.0/4.0))*u0_B0(0,-4)*rhou1_B0(0,-4) +
            ((25.0/12.0))*u0_B0(0,0)*rhou1_B0(0,0))*invDelta1block0;

   }

   else if (idx[1] == -2 + block0np1){

       d1_prhoEu0_dy = (((1.0/2.0))*(p_B0(0,-2) + rhoE_B0(0,-2))*u0_B0(0,-2) - (3.0/2.0)*(p_B0(0,-1) +
            rhoE_B0(0,-1))*u0_B0(0,-1) - (1.0/12.0)*(p_B0(0,-3) + rhoE_B0(0,-3))*u0_B0(0,-3) + ((1.0/4.0))*(p_B0(0,1) +
            rhoE_B0(0,1))*u0_B0(0,1) + ((5.0/6.0))*(p_B0(0,0) + rhoE_B0(0,0))*u0_B0(0,0))*invDelta1block0;

       d1_prhoEu1_dy = (((1.0/2.0))*(p_B0(0,-2) + rhoE_B0(0,-2))*u1_B0(0,-2) - (3.0/2.0)*(p_B0(0,-1) +
            rhoE_B0(0,-1))*u1_B0(0,-1) - (1.0/12.0)*(p_B0(0,-3) + rhoE_B0(0,-3))*u1_B0(0,-3) + ((1.0/4.0))*(p_B0(0,1) +
            rhoE_B0(0,1))*u1_B0(0,1) + ((5.0/6.0))*(p_B0(0,0) + rhoE_B0(0,0))*u1_B0(0,0))*invDelta1block0;

       d1_prhou0u0_dy = (((1.0/2.0))*p_B0(0,-2) - (3.0/2.0)*p_B0(0,-1) - (1.0/12.0)*p_B0(0,-3) + ((1.0/4.0))*p_B0(0,1) +
            ((5.0/6.0))*p_B0(0,0) + ((1.0/2.0))*u0_B0(0,-2)*rhou0_B0(0,-2) - (3.0/2.0)*u0_B0(0,-1)*rhou0_B0(0,-1) -
            (1.0/12.0)*u0_B0(0,-3)*rhou0_B0(0,-3) + ((1.0/4.0))*u0_B0(0,1)*rhou0_B0(0,1) +
            ((5.0/6.0))*u0_B0(0,0)*rhou0_B0(0,0))*invDelta1block0;

       d1_prhou1u1_dy = (((1.0/2.0))*p_B0(0,-2) - (3.0/2.0)*p_B0(0,-1) - (1.0/12.0)*p_B0(0,-3) + ((1.0/4.0))*p_B0(0,1) +
            ((5.0/6.0))*p_B0(0,0) + ((1.0/2.0))*u1_B0(0,-2)*rhou1_B0(0,-2) - (3.0/2.0)*u1_B0(0,-1)*rhou1_B0(0,-1) -
            (1.0/12.0)*u1_B0(0,-3)*rhou1_B0(0,-3) + ((1.0/4.0))*u1_B0(0,1)*rhou1_B0(0,1) +
            ((5.0/6.0))*u1_B0(0,0)*rhou1_B0(0,0))*invDelta1block0;

       d1_rhou0_dy = (((1.0/2.0))*rhou0_B0(0,-2) - (3.0/2.0)*rhou0_B0(0,-1) - (1.0/12.0)*rhou0_B0(0,-3) +
            ((1.0/4.0))*rhou0_B0(0,1) + ((5.0/6.0))*rhou0_B0(0,0))*invDelta1block0;

       d1_rhou0u1_dy = (((1.0/2.0))*u1_B0(0,-2)*rhou0_B0(0,-2) - (3.0/2.0)*u1_B0(0,-1)*rhou0_B0(0,-1) -
            (1.0/12.0)*u1_B0(0,-3)*rhou0_B0(0,-3) + ((1.0/4.0))*u1_B0(0,1)*rhou0_B0(0,1) +
            ((5.0/6.0))*u1_B0(0,0)*rhou0_B0(0,0))*invDelta1block0;

       d1_rhou1_dy = (((1.0/2.0))*rhou1_B0(0,-2) - (3.0/2.0)*rhou1_B0(0,-1) - (1.0/12.0)*rhou1_B0(0,-3) +
            ((1.0/4.0))*rhou1_B0(0,1) + ((5.0/6.0))*rhou1_B0(0,0))*invDelta1block0;

       d1_rhou1u0_dy = (((1.0/2.0))*u0_B0(0,-2)*rhou1_B0(0,-2) - (3.0/2.0)*u0_B0(0,-1)*rhou1_B0(0,-1) -
            (1.0/12.0)*u0_B0(0,-3)*rhou1_B0(0,-3) + ((1.0/4.0))*u0_B0(0,1)*rhou1_B0(0,1) +
            ((5.0/6.0))*u0_B0(0,0)*rhou1_B0(0,0))*invDelta1block0;

   }

   else{

       d1_prhoEu0_dy = (-(2.0/3.0)*(p_B0(0,-1) + rhoE_B0(0,-1))*u0_B0(0,-1) - (1.0/12.0)*(p_B0(0,2) +
            rhoE_B0(0,2))*u0_B0(0,2) + ((1.0/12.0))*(p_B0(0,-2) + rhoE_B0(0,-2))*u0_B0(0,-2) + ((2.0/3.0))*(p_B0(0,1) +
            rhoE_B0(0,1))*u0_B0(0,1))*invDelta1block0;

       d1_prhoEu1_dy = (-(2.0/3.0)*(p_B0(0,-1) + rhoE_B0(0,-1))*u1_B0(0,-1) - (1.0/12.0)*(p_B0(0,2) +
            rhoE_B0(0,2))*u1_B0(0,2) + ((1.0/12.0))*(p_B0(0,-2) + rhoE_B0(0,-2))*u1_B0(0,-2) + ((2.0/3.0))*(p_B0(0,1) +
            rhoE_B0(0,1))*u1_B0(0,1))*invDelta1block0;

       d1_prhou0u0_dy = (-(2.0/3.0)*p_B0(0,-1) - (1.0/12.0)*p_B0(0,2) + ((1.0/12.0))*p_B0(0,-2) + ((2.0/3.0))*p_B0(0,1)
            - (2.0/3.0)*u0_B0(0,-1)*rhou0_B0(0,-1) - (1.0/12.0)*u0_B0(0,2)*rhou0_B0(0,2) +
            ((1.0/12.0))*u0_B0(0,-2)*rhou0_B0(0,-2) + ((2.0/3.0))*u0_B0(0,1)*rhou0_B0(0,1))*invDelta1block0;

       d1_prhou1u1_dy = (-(2.0/3.0)*p_B0(0,-1) - (1.0/12.0)*p_B0(0,2) + ((1.0/12.0))*p_B0(0,-2) + ((2.0/3.0))*p_B0(0,1)
            - (2.0/3.0)*u1_B0(0,-1)*rhou1_B0(0,-1) - (1.0/12.0)*u1_B0(0,2)*rhou1_B0(0,2) +
            ((1.0/12.0))*u1_B0(0,-2)*rhou1_B0(0,-2) + ((2.0/3.0))*u1_B0(0,1)*rhou1_B0(0,1))*invDelta1block0;

       d1_rhou0_dy = (-(2.0/3.0)*rhou0_B0(0,-1) - (1.0/12.0)*rhou0_B0(0,2) + ((1.0/12.0))*rhou0_B0(0,-2) +
            ((2.0/3.0))*rhou0_B0(0,1))*invDelta1block0;

       d1_rhou0u1_dy = (-(2.0/3.0)*u1_B0(0,-1)*rhou0_B0(0,-1) - (1.0/12.0)*u1_B0(0,2)*rhou0_B0(0,2) +
            ((1.0/12.0))*u1_B0(0,-2)*rhou0_B0(0,-2) + ((2.0/3.0))*u1_B0(0,1)*rhou0_B0(0,1))*invDelta1block0;

       d1_rhou1_dy = (-(2.0/3.0)*rhou1_B0(0,-1) - (1.0/12.0)*rhou1_B0(0,2) + ((1.0/12.0))*rhou1_B0(0,-2) +
            ((2.0/3.0))*rhou1_B0(0,1))*invDelta1block0;

       d1_rhou1u0_dy = (-(2.0/3.0)*u0_B0(0,-1)*rhou1_B0(0,-1) - (1.0/12.0)*u0_B0(0,2)*rhou1_B0(0,2) +
            ((1.0/12.0))*u0_B0(0,-2)*rhou1_B0(0,-2) + ((2.0/3.0))*u0_B0(0,1)*rhou1_B0(0,1))*invDelta1block0;

   }

    Residual0_B0(0,0) = -D00_B0(0,0)*d1_rhou0_dx - D01_B0(0,0)*d1_rhou1_dx - D10_B0(0,0)*d1_rhou0_dy -
      D11_B0(0,0)*d1_rhou1_dy;

    Residual1_B0(0,0) = -D00_B0(0,0)*d1_prhou0u0_dx - D01_B0(0,0)*d1_rhou0u1_dx - D10_B0(0,0)*d1_prhou0u0_dy -
      D11_B0(0,0)*d1_rhou0u1_dy;

    Residual2_B0(0,0) = -D00_B0(0,0)*d1_rhou1u0_dx - D01_B0(0,0)*d1_prhou1u1_dx - D10_B0(0,0)*d1_rhou1u0_dy -
      D11_B0(0,0)*d1_prhou1u1_dy;

    Residual3_B0(0,0) = -D00_B0(0,0)*d1_prhoEu0_dx - D01_B0(0,0)*d1_prhoEu1_dx - D10_B0(0,0)*d1_prhoEu0_dy -
      D11_B0(0,0)*d1_prhoEu1_dy;

}

 void opensbliblock00Kernel021(const ACC<double> &D00_B0, const ACC<double> &D01_B0, const ACC<double> &D10_B0, const
ACC<double> &D11_B0, const ACC<double> &SD000_B0, const ACC<double> &SD001_B0, const ACC<double> &SD010_B0, const
ACC<double> &SD011_B0, const ACC<double> &SD100_B0, const ACC<double> &SD101_B0, const ACC<double> &SD110_B0, const
ACC<double> &SD111_B0, const ACC<double> &T_B0, const ACC<double> &mu_B0, const ACC<double> &u0_B0, const ACC<double>
&u1_B0, const ACC<double> &wk0_B0, const ACC<double> &wk1_B0, const ACC<double> &wk3_B0, const ACC<double> &wk4_B0,
const ACC<double> &wk5_B0, const ACC<double> &wk7_B0, ACC<double> &Residual1_B0, ACC<double> &Residual2_B0, ACC<double>
&Residual3_B0, const int *idx)
{
   double d1_mu_dx = 0.0;
   double d1_mu_dy = 0.0;
   double d1_wk0_dy = 0.0;
   double d1_wk1_dy = 0.0;
   double d1_wk3_dy = 0.0;
   double d2_T_dx = 0.0;
   double d2_T_dy = 0.0;
   double d2_u0_dx = 0.0;
   double d2_u0_dy = 0.0;
   double d2_u1_dx = 0.0;
   double d2_u1_dy = 0.0;
   if (idx[0] == 0){

       d1_mu_dx = (-3*mu_B0(2,0) + 4*mu_B0(1,0) - (25.0/12.0)*mu_B0(0,0) - (1.0/4.0)*mu_B0(4,0) +
            ((4.0/3.0))*mu_B0(3,0))*invDelta0block0;

   }

   else if (idx[0] == 1){

       d1_mu_dx = (-(5.0/6.0)*mu_B0(0,0) - (1.0/2.0)*mu_B0(2,0) - (1.0/4.0)*mu_B0(-1,0) + ((1.0/12.0))*mu_B0(3,0) +
            ((3.0/2.0))*mu_B0(1,0))*invDelta0block0;

   }

   else if (idx[0] == -1 + block0np0){

       d1_mu_dx = (-4*mu_B0(-1,0) + 3*mu_B0(-2,0) - (4.0/3.0)*mu_B0(-3,0) + ((1.0/4.0))*mu_B0(-4,0) +
            ((25.0/12.0))*mu_B0(0,0))*invDelta0block0;

   }

   else if (idx[0] == -2 + block0np0){

       d1_mu_dx = (((1.0/2.0))*mu_B0(-2,0) - (3.0/2.0)*mu_B0(-1,0) - (1.0/12.0)*mu_B0(-3,0) + ((1.0/4.0))*mu_B0(1,0) +
            ((5.0/6.0))*mu_B0(0,0))*invDelta0block0;

   }

   else{

       d1_mu_dx = (-(2.0/3.0)*mu_B0(-1,0) - (1.0/12.0)*mu_B0(2,0) + ((1.0/12.0))*mu_B0(-2,0) +
            ((2.0/3.0))*mu_B0(1,0))*invDelta0block0;

   }

   if (idx[0] == 0){

       d2_T_dx = (-(26.0/3.0)*T_B0(1,0) - (14.0/3.0)*T_B0(3,0) + ((11.0/12.0))*T_B0(4,0) + ((19.0/2.0))*T_B0(2,0) +
            ((35.0/12.0))*T_B0(0,0))*inv2Delta0block0;

       d2_u0_dx = (-(26.0/3.0)*u0_B0(1,0) - (14.0/3.0)*u0_B0(3,0) + ((11.0/12.0))*u0_B0(4,0) + ((19.0/2.0))*u0_B0(2,0) +
            ((35.0/12.0))*u0_B0(0,0))*inv2Delta0block0;

       d2_u1_dx = (-(26.0/3.0)*u1_B0(1,0) - (14.0/3.0)*u1_B0(3,0) + ((11.0/12.0))*u1_B0(4,0) + ((19.0/2.0))*u1_B0(2,0) +
            ((35.0/12.0))*u1_B0(0,0))*inv2Delta0block0;

   }

   else if (idx[0] == 1){

       d2_T_dx = (((1.0/2.0))*T_B0(1,0) - (5.0/3.0)*T_B0(0,0) - (1.0/12.0)*T_B0(3,0) + ((1.0/3.0))*T_B0(2,0) +
            ((11.0/12.0))*T_B0(-1,0))*inv2Delta0block0;

       d2_u0_dx = (((1.0/2.0))*u0_B0(1,0) - (5.0/3.0)*u0_B0(0,0) - (1.0/12.0)*u0_B0(3,0) + ((1.0/3.0))*u0_B0(2,0) +
            ((11.0/12.0))*u0_B0(-1,0))*inv2Delta0block0;

       d2_u1_dx = (((1.0/2.0))*u1_B0(1,0) - (5.0/3.0)*u1_B0(0,0) - (1.0/12.0)*u1_B0(3,0) + ((1.0/3.0))*u1_B0(2,0) +
            ((11.0/12.0))*u1_B0(-1,0))*inv2Delta0block0;

   }

   else if (idx[0] == -1 + block0np0){

       d2_T_dx = (-(26.0/3.0)*T_B0(-1,0) - (14.0/3.0)*T_B0(-3,0) + ((11.0/12.0))*T_B0(-4,0) + ((19.0/2.0))*T_B0(-2,0) +
            ((35.0/12.0))*T_B0(0,0))*inv2Delta0block0;

       d2_u0_dx = (-(26.0/3.0)*u0_B0(-1,0) - (14.0/3.0)*u0_B0(-3,0) + ((11.0/12.0))*u0_B0(-4,0) +
            ((19.0/2.0))*u0_B0(-2,0) + ((35.0/12.0))*u0_B0(0,0))*inv2Delta0block0;

       d2_u1_dx = (-(26.0/3.0)*u1_B0(-1,0) - (14.0/3.0)*u1_B0(-3,0) + ((11.0/12.0))*u1_B0(-4,0) +
            ((19.0/2.0))*u1_B0(-2,0) + ((35.0/12.0))*u1_B0(0,0))*inv2Delta0block0;

   }

   else if (idx[0] == -2 + block0np0){

       d2_T_dx = (((1.0/2.0))*T_B0(-1,0) - (5.0/3.0)*T_B0(0,0) - (1.0/12.0)*T_B0(-3,0) + ((1.0/3.0))*T_B0(-2,0) +
            ((11.0/12.0))*T_B0(1,0))*inv2Delta0block0;

       d2_u0_dx = (((1.0/2.0))*u0_B0(-1,0) - (5.0/3.0)*u0_B0(0,0) - (1.0/12.0)*u0_B0(-3,0) + ((1.0/3.0))*u0_B0(-2,0) +
            ((11.0/12.0))*u0_B0(1,0))*inv2Delta0block0;

       d2_u1_dx = (((1.0/2.0))*u1_B0(-1,0) - (5.0/3.0)*u1_B0(0,0) - (1.0/12.0)*u1_B0(-3,0) + ((1.0/3.0))*u1_B0(-2,0) +
            ((11.0/12.0))*u1_B0(1,0))*inv2Delta0block0;

   }

   else{

       d2_T_dx = (-(5.0/2.0)*T_B0(0,0) - (1.0/12.0)*T_B0(-2,0) - (1.0/12.0)*T_B0(2,0) + ((4.0/3.0))*T_B0(1,0) +
            ((4.0/3.0))*T_B0(-1,0))*inv2Delta0block0;

       d2_u0_dx = (-(5.0/2.0)*u0_B0(0,0) - (1.0/12.0)*u0_B0(-2,0) - (1.0/12.0)*u0_B0(2,0) + ((4.0/3.0))*u0_B0(1,0) +
            ((4.0/3.0))*u0_B0(-1,0))*inv2Delta0block0;

       d2_u1_dx = (-(5.0/2.0)*u1_B0(0,0) - (1.0/12.0)*u1_B0(-2,0) - (1.0/12.0)*u1_B0(2,0) + ((4.0/3.0))*u1_B0(1,0) +
            ((4.0/3.0))*u1_B0(-1,0))*inv2Delta0block0;

   }

   if (idx[1] == 0){

       d1_mu_dy = (-3*mu_B0(0,2) + 4*mu_B0(0,1) - (25.0/12.0)*mu_B0(0,0) - (1.0/4.0)*mu_B0(0,4) +
            ((4.0/3.0))*mu_B0(0,3))*invDelta1block0;

       d1_wk0_dy = (-3*wk0_B0(0,2) + 4*wk0_B0(0,1) - (25.0/12.0)*wk0_B0(0,0) - (1.0/4.0)*wk0_B0(0,4) +
            ((4.0/3.0))*wk0_B0(0,3))*invDelta1block0;

       d1_wk1_dy = (-3*wk1_B0(0,2) + 4*wk1_B0(0,1) - (25.0/12.0)*wk1_B0(0,0) - (1.0/4.0)*wk1_B0(0,4) +
            ((4.0/3.0))*wk1_B0(0,3))*invDelta1block0;

       d1_wk3_dy = (-3*wk3_B0(0,2) + 4*wk3_B0(0,1) - (25.0/12.0)*wk3_B0(0,0) - (1.0/4.0)*wk3_B0(0,4) +
            ((4.0/3.0))*wk3_B0(0,3))*invDelta1block0;

   }

   else if (idx[1] == 1){

       d1_mu_dy = (-(5.0/6.0)*mu_B0(0,0) - (1.0/2.0)*mu_B0(0,2) - (1.0/4.0)*mu_B0(0,-1) + ((1.0/12.0))*mu_B0(0,3) +
            ((3.0/2.0))*mu_B0(0,1))*invDelta1block0;

       d1_wk0_dy = (-(5.0/6.0)*wk0_B0(0,0) - (1.0/2.0)*wk0_B0(0,2) - (1.0/4.0)*wk0_B0(0,-1) + ((1.0/12.0))*wk0_B0(0,3) +
            ((3.0/2.0))*wk0_B0(0,1))*invDelta1block0;

       d1_wk1_dy = (-(5.0/6.0)*wk1_B0(0,0) - (1.0/2.0)*wk1_B0(0,2) - (1.0/4.0)*wk1_B0(0,-1) + ((1.0/12.0))*wk1_B0(0,3) +
            ((3.0/2.0))*wk1_B0(0,1))*invDelta1block0;

       d1_wk3_dy = (-(5.0/6.0)*wk3_B0(0,0) - (1.0/2.0)*wk3_B0(0,2) - (1.0/4.0)*wk3_B0(0,-1) + ((1.0/12.0))*wk3_B0(0,3) +
            ((3.0/2.0))*wk3_B0(0,1))*invDelta1block0;

   }

   else if (idx[1] == -1 + block0np1){

       d1_mu_dy = (-4*mu_B0(0,-1) + 3*mu_B0(0,-2) - (4.0/3.0)*mu_B0(0,-3) + ((1.0/4.0))*mu_B0(0,-4) +
            ((25.0/12.0))*mu_B0(0,0))*invDelta1block0;

       d1_wk0_dy = (-4*wk0_B0(0,-1) + 3*wk0_B0(0,-2) - (4.0/3.0)*wk0_B0(0,-3) + ((1.0/4.0))*wk0_B0(0,-4) +
            ((25.0/12.0))*wk0_B0(0,0))*invDelta1block0;

       d1_wk1_dy = (-4*wk1_B0(0,-1) + 3*wk1_B0(0,-2) - (4.0/3.0)*wk1_B0(0,-3) + ((1.0/4.0))*wk1_B0(0,-4) +
            ((25.0/12.0))*wk1_B0(0,0))*invDelta1block0;

       d1_wk3_dy = (-4*wk3_B0(0,-1) + 3*wk3_B0(0,-2) - (4.0/3.0)*wk3_B0(0,-3) + ((1.0/4.0))*wk3_B0(0,-4) +
            ((25.0/12.0))*wk3_B0(0,0))*invDelta1block0;

   }

   else if (idx[1] == -2 + block0np1){

       d1_mu_dy = (((1.0/2.0))*mu_B0(0,-2) - (3.0/2.0)*mu_B0(0,-1) - (1.0/12.0)*mu_B0(0,-3) + ((1.0/4.0))*mu_B0(0,1) +
            ((5.0/6.0))*mu_B0(0,0))*invDelta1block0;

       d1_wk0_dy = (((1.0/2.0))*wk0_B0(0,-2) - (3.0/2.0)*wk0_B0(0,-1) - (1.0/12.0)*wk0_B0(0,-3) +
            ((1.0/4.0))*wk0_B0(0,1) + ((5.0/6.0))*wk0_B0(0,0))*invDelta1block0;

       d1_wk1_dy = (((1.0/2.0))*wk1_B0(0,-2) - (3.0/2.0)*wk1_B0(0,-1) - (1.0/12.0)*wk1_B0(0,-3) +
            ((1.0/4.0))*wk1_B0(0,1) + ((5.0/6.0))*wk1_B0(0,0))*invDelta1block0;

       d1_wk3_dy = (((1.0/2.0))*wk3_B0(0,-2) - (3.0/2.0)*wk3_B0(0,-1) - (1.0/12.0)*wk3_B0(0,-3) +
            ((1.0/4.0))*wk3_B0(0,1) + ((5.0/6.0))*wk3_B0(0,0))*invDelta1block0;

   }

   else{

       d1_mu_dy = (-(2.0/3.0)*mu_B0(0,-1) - (1.0/12.0)*mu_B0(0,2) + ((1.0/12.0))*mu_B0(0,-2) +
            ((2.0/3.0))*mu_B0(0,1))*invDelta1block0;

       d1_wk0_dy = (-(2.0/3.0)*wk0_B0(0,-1) - (1.0/12.0)*wk0_B0(0,2) + ((1.0/12.0))*wk0_B0(0,-2) +
            ((2.0/3.0))*wk0_B0(0,1))*invDelta1block0;

       d1_wk1_dy = (-(2.0/3.0)*wk1_B0(0,-1) - (1.0/12.0)*wk1_B0(0,2) + ((1.0/12.0))*wk1_B0(0,-2) +
            ((2.0/3.0))*wk1_B0(0,1))*invDelta1block0;

       d1_wk3_dy = (-(2.0/3.0)*wk3_B0(0,-1) - (1.0/12.0)*wk3_B0(0,2) + ((1.0/12.0))*wk3_B0(0,-2) +
            ((2.0/3.0))*wk3_B0(0,1))*invDelta1block0;

   }

   if (idx[1] == 0){

       d2_T_dy = (-(26.0/3.0)*T_B0(0,1) - (14.0/3.0)*T_B0(0,3) + ((11.0/12.0))*T_B0(0,4) + ((19.0/2.0))*T_B0(0,2) +
            ((35.0/12.0))*T_B0(0,0))*inv2Delta1block0;

       d2_u0_dy = (-(26.0/3.0)*u0_B0(0,1) - (14.0/3.0)*u0_B0(0,3) + ((11.0/12.0))*u0_B0(0,4) + ((19.0/2.0))*u0_B0(0,2) +
            ((35.0/12.0))*u0_B0(0,0))*inv2Delta1block0;

       d2_u1_dy = (-(26.0/3.0)*u1_B0(0,1) - (14.0/3.0)*u1_B0(0,3) + ((11.0/12.0))*u1_B0(0,4) + ((19.0/2.0))*u1_B0(0,2) +
            ((35.0/12.0))*u1_B0(0,0))*inv2Delta1block0;

   }

   else if (idx[1] == 1){

       d2_T_dy = (((1.0/2.0))*T_B0(0,1) - (5.0/3.0)*T_B0(0,0) - (1.0/12.0)*T_B0(0,3) + ((1.0/3.0))*T_B0(0,2) +
            ((11.0/12.0))*T_B0(0,-1))*inv2Delta1block0;

       d2_u0_dy = (((1.0/2.0))*u0_B0(0,1) - (5.0/3.0)*u0_B0(0,0) - (1.0/12.0)*u0_B0(0,3) + ((1.0/3.0))*u0_B0(0,2) +
            ((11.0/12.0))*u0_B0(0,-1))*inv2Delta1block0;

       d2_u1_dy = (((1.0/2.0))*u1_B0(0,1) - (5.0/3.0)*u1_B0(0,0) - (1.0/12.0)*u1_B0(0,3) + ((1.0/3.0))*u1_B0(0,2) +
            ((11.0/12.0))*u1_B0(0,-1))*inv2Delta1block0;

   }

   else if (idx[1] == -1 + block0np1){

       d2_T_dy = (-(26.0/3.0)*T_B0(0,-1) - (14.0/3.0)*T_B0(0,-3) + ((11.0/12.0))*T_B0(0,-4) + ((19.0/2.0))*T_B0(0,-2) +
            ((35.0/12.0))*T_B0(0,0))*inv2Delta1block0;

       d2_u0_dy = (-(26.0/3.0)*u0_B0(0,-1) - (14.0/3.0)*u0_B0(0,-3) + ((11.0/12.0))*u0_B0(0,-4) +
            ((19.0/2.0))*u0_B0(0,-2) + ((35.0/12.0))*u0_B0(0,0))*inv2Delta1block0;

       d2_u1_dy = (-(26.0/3.0)*u1_B0(0,-1) - (14.0/3.0)*u1_B0(0,-3) + ((11.0/12.0))*u1_B0(0,-4) +
            ((19.0/2.0))*u1_B0(0,-2) + ((35.0/12.0))*u1_B0(0,0))*inv2Delta1block0;

   }

   else if (idx[1] == -2 + block0np1){

       d2_T_dy = (((1.0/2.0))*T_B0(0,-1) - (5.0/3.0)*T_B0(0,0) - (1.0/12.0)*T_B0(0,-3) + ((1.0/3.0))*T_B0(0,-2) +
            ((11.0/12.0))*T_B0(0,1))*inv2Delta1block0;

       d2_u0_dy = (((1.0/2.0))*u0_B0(0,-1) - (5.0/3.0)*u0_B0(0,0) - (1.0/12.0)*u0_B0(0,-3) + ((1.0/3.0))*u0_B0(0,-2) +
            ((11.0/12.0))*u0_B0(0,1))*inv2Delta1block0;

       d2_u1_dy = (((1.0/2.0))*u1_B0(0,-1) - (5.0/3.0)*u1_B0(0,0) - (1.0/12.0)*u1_B0(0,-3) + ((1.0/3.0))*u1_B0(0,-2) +
            ((11.0/12.0))*u1_B0(0,1))*inv2Delta1block0;

   }

   else{

       d2_T_dy = (-(5.0/2.0)*T_B0(0,0) - (1.0/12.0)*T_B0(0,-2) - (1.0/12.0)*T_B0(0,2) + ((4.0/3.0))*T_B0(0,1) +
            ((4.0/3.0))*T_B0(0,-1))*inv2Delta1block0;

       d2_u0_dy = (-(5.0/2.0)*u0_B0(0,0) - (1.0/12.0)*u0_B0(0,-2) - (1.0/12.0)*u0_B0(0,2) + ((4.0/3.0))*u0_B0(0,1) +
            ((4.0/3.0))*u0_B0(0,-1))*inv2Delta1block0;

       d2_u1_dy = (-(5.0/2.0)*u1_B0(0,0) - (1.0/12.0)*u1_B0(0,-2) - (1.0/12.0)*u1_B0(0,2) + ((4.0/3.0))*u1_B0(0,1) +
            ((4.0/3.0))*u1_B0(0,-1))*inv2Delta1block0;

   }

    Residual1_B0(0,0) = (D01_B0(0,0)*d1_mu_dx + D11_B0(0,0)*d1_mu_dy)*(D00_B0(0,0)*wk1_B0(0,0) + D01_B0(0,0)*wk0_B0(0,0)
      + D10_B0(0,0)*wk5_B0(0,0) + D11_B0(0,0)*wk4_B0(0,0))*invRe + ((1.0/3.0))*(3*(D01_B0(0,0)*D01_B0(0,0))*d2_u0_dx +
      3*(D11_B0(0,0)*D11_B0(0,0))*d2_u0_dy + 4*(D00_B0(0,0)*D00_B0(0,0))*d2_u0_dx + 4*(D10_B0(0,0)*D10_B0(0,0))*d2_u0_dy
      + D00_B0(0,0)*D01_B0(0,0)*d2_u1_dx + D00_B0(0,0)*D11_B0(0,0)*d1_wk1_dy + D01_B0(0,0)*D10_B0(0,0)*d1_wk1_dy +
      D10_B0(0,0)*D11_B0(0,0)*d2_u1_dy - 2*D00_B0(0,0)*wk1_B0(0,0)*SD010_B0(0,0) -
      2*D00_B0(0,0)*wk5_B0(0,0)*SD110_B0(0,0) - 2*D10_B0(0,0)*wk1_B0(0,0)*SD011_B0(0,0) -
      2*D10_B0(0,0)*wk5_B0(0,0)*SD111_B0(0,0) + 3*D01_B0(0,0)*wk0_B0(0,0)*SD010_B0(0,0) +
      3*D01_B0(0,0)*wk1_B0(0,0)*SD000_B0(0,0) + 3*D01_B0(0,0)*wk4_B0(0,0)*SD110_B0(0,0) +
      3*D01_B0(0,0)*wk5_B0(0,0)*SD100_B0(0,0) + 3*D11_B0(0,0)*wk0_B0(0,0)*SD011_B0(0,0) +
      3*D11_B0(0,0)*wk1_B0(0,0)*SD001_B0(0,0) + 3*D11_B0(0,0)*wk4_B0(0,0)*SD111_B0(0,0) +
      3*D11_B0(0,0)*wk5_B0(0,0)*SD101_B0(0,0) + 4*D00_B0(0,0)*wk0_B0(0,0)*SD000_B0(0,0) +
      4*D00_B0(0,0)*wk4_B0(0,0)*SD100_B0(0,0) + 4*D10_B0(0,0)*wk0_B0(0,0)*SD001_B0(0,0) +
      4*D10_B0(0,0)*wk4_B0(0,0)*SD101_B0(0,0) + 6*D01_B0(0,0)*D11_B0(0,0)*d1_wk0_dy +
      8*D00_B0(0,0)*D10_B0(0,0)*d1_wk0_dy)*invRe*mu_B0(0,0) + ((2.0/3.0))*(D00_B0(0,0)*d1_mu_dx +
      D10_B0(0,0)*d1_mu_dy)*(-D01_B0(0,0)*wk1_B0(0,0) - D11_B0(0,0)*wk5_B0(0,0) + 2*D00_B0(0,0)*wk0_B0(0,0) +
      2*D10_B0(0,0)*wk4_B0(0,0))*invRe + Residual1_B0(0,0);

    Residual2_B0(0,0) = (D00_B0(0,0)*d1_mu_dx + D10_B0(0,0)*d1_mu_dy)*(D00_B0(0,0)*wk1_B0(0,0) + D01_B0(0,0)*wk0_B0(0,0)
      + D10_B0(0,0)*wk5_B0(0,0) + D11_B0(0,0)*wk4_B0(0,0))*invRe - (2.0/3.0)*(D01_B0(0,0)*d1_mu_dx +
      D11_B0(0,0)*d1_mu_dy)*(D00_B0(0,0)*wk0_B0(0,0) + D10_B0(0,0)*wk4_B0(0,0) - 2*D01_B0(0,0)*wk1_B0(0,0) -
      2*D11_B0(0,0)*wk5_B0(0,0))*invRe + ((1.0/3.0))*(3*(D00_B0(0,0)*D00_B0(0,0))*d2_u1_dx +
      3*(D10_B0(0,0)*D10_B0(0,0))*d2_u1_dy + 4*(D01_B0(0,0)*D01_B0(0,0))*d2_u1_dx + 4*(D11_B0(0,0)*D11_B0(0,0))*d2_u1_dy
      + D00_B0(0,0)*D01_B0(0,0)*d2_u0_dx + D00_B0(0,0)*D11_B0(0,0)*d1_wk0_dy + D01_B0(0,0)*D10_B0(0,0)*d1_wk0_dy +
      D10_B0(0,0)*D11_B0(0,0)*d2_u0_dy - 2*D01_B0(0,0)*wk0_B0(0,0)*SD000_B0(0,0) -
      2*D01_B0(0,0)*wk4_B0(0,0)*SD100_B0(0,0) - 2*D11_B0(0,0)*wk0_B0(0,0)*SD001_B0(0,0) -
      2*D11_B0(0,0)*wk4_B0(0,0)*SD101_B0(0,0) + 3*D00_B0(0,0)*wk0_B0(0,0)*SD010_B0(0,0) +
      3*D00_B0(0,0)*wk1_B0(0,0)*SD000_B0(0,0) + 3*D00_B0(0,0)*wk4_B0(0,0)*SD110_B0(0,0) +
      3*D00_B0(0,0)*wk5_B0(0,0)*SD100_B0(0,0) + 3*D10_B0(0,0)*wk0_B0(0,0)*SD011_B0(0,0) +
      3*D10_B0(0,0)*wk1_B0(0,0)*SD001_B0(0,0) + 3*D10_B0(0,0)*wk4_B0(0,0)*SD111_B0(0,0) +
      3*D10_B0(0,0)*wk5_B0(0,0)*SD101_B0(0,0) + 4*D01_B0(0,0)*wk1_B0(0,0)*SD010_B0(0,0) +
      4*D01_B0(0,0)*wk5_B0(0,0)*SD110_B0(0,0) + 4*D11_B0(0,0)*wk1_B0(0,0)*SD011_B0(0,0) +
      4*D11_B0(0,0)*wk5_B0(0,0)*SD111_B0(0,0) + 6*D00_B0(0,0)*D10_B0(0,0)*d1_wk1_dy +
      8*D01_B0(0,0)*D11_B0(0,0)*d1_wk1_dy)*invRe*mu_B0(0,0) + Residual2_B0(0,0);

    Residual3_B0(0,0) = (D00_B0(0,0)*wk1_B0(0,0) + D10_B0(0,0)*wk5_B0(0,0))*(D00_B0(0,0)*wk1_B0(0,0) +
      D01_B0(0,0)*wk0_B0(0,0) + D10_B0(0,0)*wk5_B0(0,0) + D11_B0(0,0)*wk4_B0(0,0))*invRe*mu_B0(0,0) +
      (D00_B0(0,0)*d1_mu_dx + D10_B0(0,0)*d1_mu_dy)*(D00_B0(0,0)*wk1_B0(0,0) + D01_B0(0,0)*wk0_B0(0,0) +
      D10_B0(0,0)*wk5_B0(0,0) + D11_B0(0,0)*wk4_B0(0,0))*invRe*u1_B0(0,0) + (D01_B0(0,0)*wk0_B0(0,0) +
      D11_B0(0,0)*wk4_B0(0,0))*(D00_B0(0,0)*wk1_B0(0,0) + D01_B0(0,0)*wk0_B0(0,0) + D10_B0(0,0)*wk5_B0(0,0) +
      D11_B0(0,0)*wk4_B0(0,0))*invRe*mu_B0(0,0) + (D01_B0(0,0)*d1_mu_dx + D11_B0(0,0)*d1_mu_dy)*(D00_B0(0,0)*wk1_B0(0,0)
      + D01_B0(0,0)*wk0_B0(0,0) + D10_B0(0,0)*wk5_B0(0,0) + D11_B0(0,0)*wk4_B0(0,0))*invRe*u0_B0(0,0) -
      (2.0/3.0)*(D01_B0(0,0)*wk1_B0(0,0) + D11_B0(0,0)*wk5_B0(0,0))*(D00_B0(0,0)*wk0_B0(0,0) + D10_B0(0,0)*wk4_B0(0,0) -
      2*D01_B0(0,0)*wk1_B0(0,0) - 2*D11_B0(0,0)*wk5_B0(0,0))*invRe*mu_B0(0,0) - (2.0/3.0)*(D01_B0(0,0)*d1_mu_dx +
      D11_B0(0,0)*d1_mu_dy)*(D00_B0(0,0)*wk0_B0(0,0) + D10_B0(0,0)*wk4_B0(0,0) - 2*D01_B0(0,0)*wk1_B0(0,0) -
      2*D11_B0(0,0)*wk5_B0(0,0))*invRe*u1_B0(0,0) + ((1.0/3.0))*(3*(D00_B0(0,0)*D00_B0(0,0))*d2_u1_dx +
      3*(D10_B0(0,0)*D10_B0(0,0))*d2_u1_dy + 4*(D01_B0(0,0)*D01_B0(0,0))*d2_u1_dx + 4*(D11_B0(0,0)*D11_B0(0,0))*d2_u1_dy
      + D00_B0(0,0)*D01_B0(0,0)*d2_u0_dx + D00_B0(0,0)*D11_B0(0,0)*d1_wk0_dy + D01_B0(0,0)*D10_B0(0,0)*d1_wk0_dy +
      D10_B0(0,0)*D11_B0(0,0)*d2_u0_dy - 2*D01_B0(0,0)*wk0_B0(0,0)*SD000_B0(0,0) -
      2*D01_B0(0,0)*wk4_B0(0,0)*SD100_B0(0,0) - 2*D11_B0(0,0)*wk0_B0(0,0)*SD001_B0(0,0) -
      2*D11_B0(0,0)*wk4_B0(0,0)*SD101_B0(0,0) + 3*D00_B0(0,0)*wk0_B0(0,0)*SD010_B0(0,0) +
      3*D00_B0(0,0)*wk1_B0(0,0)*SD000_B0(0,0) + 3*D00_B0(0,0)*wk4_B0(0,0)*SD110_B0(0,0) +
      3*D00_B0(0,0)*wk5_B0(0,0)*SD100_B0(0,0) + 3*D10_B0(0,0)*wk0_B0(0,0)*SD011_B0(0,0) +
      3*D10_B0(0,0)*wk1_B0(0,0)*SD001_B0(0,0) + 3*D10_B0(0,0)*wk4_B0(0,0)*SD111_B0(0,0) +
      3*D10_B0(0,0)*wk5_B0(0,0)*SD101_B0(0,0) + 4*D01_B0(0,0)*wk1_B0(0,0)*SD010_B0(0,0) +
      4*D01_B0(0,0)*wk5_B0(0,0)*SD110_B0(0,0) + 4*D11_B0(0,0)*wk1_B0(0,0)*SD011_B0(0,0) +
      4*D11_B0(0,0)*wk5_B0(0,0)*SD111_B0(0,0) + 6*D00_B0(0,0)*D10_B0(0,0)*d1_wk1_dy +
      8*D01_B0(0,0)*D11_B0(0,0)*d1_wk1_dy)*invRe*mu_B0(0,0)*u1_B0(0,0) +
      ((1.0/3.0))*(3*(D01_B0(0,0)*D01_B0(0,0))*d2_u0_dx + 3*(D11_B0(0,0)*D11_B0(0,0))*d2_u0_dy +
      4*(D00_B0(0,0)*D00_B0(0,0))*d2_u0_dx + 4*(D10_B0(0,0)*D10_B0(0,0))*d2_u0_dy + D00_B0(0,0)*D01_B0(0,0)*d2_u1_dx +
      D00_B0(0,0)*D11_B0(0,0)*d1_wk1_dy + D01_B0(0,0)*D10_B0(0,0)*d1_wk1_dy + D10_B0(0,0)*D11_B0(0,0)*d2_u1_dy -
      2*D00_B0(0,0)*wk1_B0(0,0)*SD010_B0(0,0) - 2*D00_B0(0,0)*wk5_B0(0,0)*SD110_B0(0,0) -
      2*D10_B0(0,0)*wk1_B0(0,0)*SD011_B0(0,0) - 2*D10_B0(0,0)*wk5_B0(0,0)*SD111_B0(0,0) +
      3*D01_B0(0,0)*wk0_B0(0,0)*SD010_B0(0,0) + 3*D01_B0(0,0)*wk1_B0(0,0)*SD000_B0(0,0) +
      3*D01_B0(0,0)*wk4_B0(0,0)*SD110_B0(0,0) + 3*D01_B0(0,0)*wk5_B0(0,0)*SD100_B0(0,0) +
      3*D11_B0(0,0)*wk0_B0(0,0)*SD011_B0(0,0) + 3*D11_B0(0,0)*wk1_B0(0,0)*SD001_B0(0,0) +
      3*D11_B0(0,0)*wk4_B0(0,0)*SD111_B0(0,0) + 3*D11_B0(0,0)*wk5_B0(0,0)*SD101_B0(0,0) +
      4*D00_B0(0,0)*wk0_B0(0,0)*SD000_B0(0,0) + 4*D00_B0(0,0)*wk4_B0(0,0)*SD100_B0(0,0) +
      4*D10_B0(0,0)*wk0_B0(0,0)*SD001_B0(0,0) + 4*D10_B0(0,0)*wk4_B0(0,0)*SD101_B0(0,0) +
      6*D01_B0(0,0)*D11_B0(0,0)*d1_wk0_dy + 8*D00_B0(0,0)*D10_B0(0,0)*d1_wk0_dy)*invRe*mu_B0(0,0)*u0_B0(0,0) +
      ((2.0/3.0))*(D00_B0(0,0)*wk0_B0(0,0) + D10_B0(0,0)*wk4_B0(0,0))*(-D01_B0(0,0)*wk1_B0(0,0) -
      D11_B0(0,0)*wk5_B0(0,0) + 2*D00_B0(0,0)*wk0_B0(0,0) + 2*D10_B0(0,0)*wk4_B0(0,0))*invRe*mu_B0(0,0) +
      ((2.0/3.0))*(D00_B0(0,0)*d1_mu_dx + D10_B0(0,0)*d1_mu_dy)*(-D01_B0(0,0)*wk1_B0(0,0) - D11_B0(0,0)*wk5_B0(0,0) +
      2*D00_B0(0,0)*wk0_B0(0,0) + 2*D10_B0(0,0)*wk4_B0(0,0))*invRe*u0_B0(0,0) + (D00_B0(0,0)*wk3_B0(0,0) +
      D10_B0(0,0)*wk7_B0(0,0))*(D00_B0(0,0)*d1_mu_dx + D10_B0(0,0)*d1_mu_dy)*invPr*invRe*inv2Minf*inv_gamma_m1 +
      (D01_B0(0,0)*wk3_B0(0,0) + D11_B0(0,0)*wk7_B0(0,0))*(D01_B0(0,0)*d1_mu_dx +
      D11_B0(0,0)*d1_mu_dy)*invPr*invRe*inv2Minf*inv_gamma_m1 + ((D00_B0(0,0)*D00_B0(0,0))*d2_T_dx +
      (D01_B0(0,0)*D01_B0(0,0))*d2_T_dx + (D10_B0(0,0)*D10_B0(0,0))*d2_T_dy + (D11_B0(0,0)*D11_B0(0,0))*d2_T_dy +
      D00_B0(0,0)*wk3_B0(0,0)*SD000_B0(0,0) + D00_B0(0,0)*wk7_B0(0,0)*SD100_B0(0,0) +
      D01_B0(0,0)*wk3_B0(0,0)*SD010_B0(0,0) + D01_B0(0,0)*wk7_B0(0,0)*SD110_B0(0,0) +
      D10_B0(0,0)*wk3_B0(0,0)*SD001_B0(0,0) + D10_B0(0,0)*wk7_B0(0,0)*SD101_B0(0,0) +
      D11_B0(0,0)*wk3_B0(0,0)*SD011_B0(0,0) + D11_B0(0,0)*wk7_B0(0,0)*SD111_B0(0,0) +
      2*D00_B0(0,0)*D10_B0(0,0)*d1_wk3_dy +
      2*D01_B0(0,0)*D11_B0(0,0)*d1_wk3_dy)*invPr*invRe*inv2Minf*inv_gamma_m1*mu_B0(0,0) + Residual3_B0(0,0);

}

 void opensbliblock00Kernel039(const ACC<double> &Residual0_B0, const ACC<double> &Residual1_B0, const ACC<double>
&Residual2_B0, const ACC<double> &Residual3_B0, ACC<double> &rhoE_B0, ACC<double> &rhoE_RKold_B0, ACC<double> &rho_B0,
ACC<double> &rho_RKold_B0, ACC<double> &rhou0_B0, ACC<double> &rhou0_RKold_B0, ACC<double> &rhou1_B0, ACC<double>
&rhou1_RKold_B0, const double *rkA, const double *rkB)
{
   rho_RKold_B0(0,0) = rkA[0]*rho_RKold_B0(0,0) + dt*Residual0_B0(0,0);

   rho_B0(0,0) = rkB[0]*rho_RKold_B0(0,0) + rho_B0(0,0);

   rhou0_RKold_B0(0,0) = rkA[0]*rhou0_RKold_B0(0,0) + dt*Residual1_B0(0,0);

   rhou0_B0(0,0) = rkB[0]*rhou0_RKold_B0(0,0) + rhou0_B0(0,0);

   rhou1_RKold_B0(0,0) = rkA[0]*rhou1_RKold_B0(0,0) + dt*Residual2_B0(0,0);

   rhou1_B0(0,0) = rkB[0]*rhou1_RKold_B0(0,0) + rhou1_B0(0,0);

   rhoE_RKold_B0(0,0) = rkA[0]*rhoE_RKold_B0(0,0) + dt*Residual3_B0(0,0);

   rhoE_B0(0,0) = rkB[0]*rhoE_RKold_B0(0,0) + rhoE_B0(0,0);

}

#endif
